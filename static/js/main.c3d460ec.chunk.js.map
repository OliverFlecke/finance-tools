{"version":3,"sources":["components/AddAccountModal.tsx","utils/converters.ts","services/AccountService.ts","components/AddEntryModal.tsx","components/FileOptionMenu.tsx","components/IndividualGrowthGraph.tsx","icons/DeleteIcon.tsx","components/Cell.tsx","components/Table.tsx","AccountOverview.tsx","services/formulas.ts","components/CompoundInterest/index.tsx","App.tsx","index.tsx"],"names":["AddAccount","addAccount","useState","showPrompt","setShowPrompt","useForm","register","handleSubmit","errors","formState","close","useCallback","onClick","x","isOpen","onDismiss","onSubmit","account","console","log","className","placeholder","label","required","errorMessage","name","type","buttonType","parseNumber","value","Number","parseFloat","toString","replace","currencyFormatter","Intl","NumberFormat","style","currency","AccountContext","createContext","state","accounts","entries","dispatch","_","accountReducer","action","newState","concat","date","key","unordered","Object","keys","sort","reduce","obj","warn","JSON","stringify","reducer","localStorage","setItem","initAccountState","defaultValue","data","getItem","undefined","parse","getData","AddEntryModal","memo","useContext","setIsOpen","dismiss","displayName","FileOptionMenu","closeFile","save","blob","Blob","filename","Date","toISOString","slice","saveAs","fileChange","e","a","files","target","length","file","text","onChange","IndividualGrowthGraph","map","lineColors","colors","amber","blueGray","green","pink","yellow","rose","purple","sky","indigo","ParentSize","parent","margin","width","xMax","yMax","xScale","scaleTime","range","domain","extent","d","yMaxValue","max","yScale","scaleLinear","nice","axisFormat","tickFormat","labelColor","cyan","legendScale","scaleOrdinal","i","height","Group","top","left","AxisLeft","scale","numTicks","strokeWidth","stroke","tickLabelProps","fill","textAnchor","verticalAnchor","AxisBottom","color","labelFormat","toUpperCase","labels","LegendItem","LegendLabel","align","AccountLine","compose","accessor","xCompose","yCompose","LinePath","y","curve","curveLinear","DeleteIcon","xmlns","viewBox","strokeLinecap","strokeLinejoin","strokeMiterlimit","Cell","entry","entryRef","useRef","onBlur","element","amount","currentTarget","innerText","NaN","format","contentEditable","ref","Table","totals","filterAndSum","gain","total","totalCash","totalInvested","filter","acc","AccountOverview","useReducer","Provider","FV","P","A","r","year","n","rate","ratePerPaymentPeriod","nper","Math","pow","p","CompoundInterest","setData","customInput","Input","thousandSeparator","inputMode","existingAmount","message","interestRate","investmentPeriod","interestAccural","monthlyDeposit","formatter","CalculationSummary","props","useMemo","isWithDeposits","balance","totalDeposits","totalInterest","Array","deposit","totalDeposit","totalBalance","lastYear","depositPrevious","balancePrevious","interest","AmountSummary","client_id","App","useDarkModeWithClass","isDarkMode","setDarkMode","useEffect","params","URLSearchParams","window","location","search","has","code","get","debug","fetch","method","body","client_secret","then","catch","err","darkMode","onToggle","href","rootElement","document","getElementById","Application","StrictMode","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.c3d460ec.chunk.js","sourcesContent":["import { Button, ButtonContainer, Input, Modal } from '@oliverflecke/components-react';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Account } from '../models/Account';\n\ninterface AddAccountProps {\n\taddAccount: (account: Account) => void;\n}\n\nconst AddAccount: FC<AddAccountProps> = ({ addAccount }: AddAccountProps) => {\n\tconst [showPrompt, setShowPrompt] = useState(false);\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<Account>();\n\tconst close = useCallback(() => setShowPrompt(false), [setShowPrompt]);\n\tconst onSubmit = (account: Account) => {\n\t\tconsole.log(`Adding account: ${account}`);\n\t\taddAccount(account);\n\t\tclose();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<Button onClick={() => setShowPrompt((x) => !x)}>Add account</Button>\n\t\t\t<Modal isOpen={showPrompt} onDismiss={close}>\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t\t<h2 className=\"text-lg text-gray-700 dark:text-gray-400\">Add new account</h2>\n\n\t\t\t\t\t\t<fieldset className=\"space-y-2\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder=\"Savings, Investments...\"\n\t\t\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\t\t\t{...register('name', { required: true })}\n\t\t\t\t\t\t\t\terrorMessage={errors.name && 'Please provide a name for your account'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder=\"Cash, Investment...\"\n\t\t\t\t\t\t\t\tlabel=\"Type\"\n\t\t\t\t\t\t\t\t{...register('type', { required: true })}\n\t\t\t\t\t\t\t\terrorMessage={errors.type && 'Please choose cash or investment'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t<Button buttonType=\"Transparent\" onClick={close}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"submit\">Add</Button>\n\t\t\t\t\t</ButtonContainer>\n\t\t\t\t</form>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default AddAccount;\n","// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nexport function parseNumber(value: any): number {\n\treturn Number.parseFloat(value.toString().replace(/[,a-zA-Z]/g, ''));\n}\n\nexport const currencyFormatter = Intl.NumberFormat('en-US', {\n\tstyle: 'currency',\n\tcurrency: 'DKK',\n});\n\nexport function sortObject(unordered: any): any {\n\treturn (\n\t\tObject.keys(unordered)\n\t\t\t.sort()\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t.reduce((obj: { [key: string]: any }, key) => {\n\t\t\t\tobj[key] = unordered[key];\n\t\t\t\treturn obj;\n\t\t\t}, {})\n\t);\n}\n","import { createContext } from 'react';\nimport { Account, AccountEntries } from '../models/Account';\nimport { sortObject } from '../utils/converters';\n\nexport const AccountContext = createContext({\n\tstate: {\n\t\taccounts: [] as Account[],\n\t\tentries: {} as AccountEntries,\n\t},\n\t// eslint-disable-next-line @typescript-eslint/no-empty-function\n\tdispatch: (_: AccountAction) => {},\n});\n\nexport interface AccountState {\n\taccounts: Account[];\n\tentries: AccountEntries;\n}\n\nfunction getDefaultAccountState(): AccountState {\n\treturn {\n\t\taccounts: [],\n\t\tentries: {},\n\t};\n}\n\nexport function accountReducer(state: AccountState, action: AccountAction): AccountState {\n\tconsole.log(`Got action '${action.type}'`);\n\tconst newState = reducer(state, action);\n\n\tlocalStorage.setItem('account_state', JSON.stringify(newState));\n\n\treturn newState;\n}\nexport function initAccountState(): AccountState {\n\treturn getData('account_state', getDefaultAccountState());\n}\n\nexport type AccountAction =\n\t| { type: 'add account'; account: Account }\n\t| { type: 'add entry'; date: string }\n\t| { type: 'delete entry'; date: string }\n\t| { type: 'reset' }\n\t| { type: 'load state'; state: AccountState }\n\t| { type: 'edit entry for account'; name: string; value: number; key: string };\n\nfunction reducer(state: AccountState, action: AccountAction): AccountState {\n\tswitch (action.type) {\n\t\tcase 'reset':\n\t\t\treturn getDefaultAccountState();\n\t\tcase 'load state':\n\t\t\treturn action.state;\n\t\tcase 'add account':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taccounts: state.accounts.concat(action.account),\n\t\t\t};\n\t\tcase 'add entry':\n\t\t\tstate.entries[action.date] = {};\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t};\n\t\tcase 'edit entry for account':\n\t\t\tstate.entries[action.key][action.name] = action.value;\n\t\t\tstate.entries = sortObject(state.entries);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t};\n\t\tcase 'delete entry':\n\t\t\tdelete state.entries[action.date];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tentries: state.entries,\n\t\t\t};\n\n\t\tdefault:\n\t\t\tconsole.warn(`action type not handled: ${JSON.stringify(action)}`);\n\t\t\treturn state;\n\t}\n}\n\nfunction getData(key: string, defaultValue: any = {}): any {\n\tconst data = localStorage.getItem(key) ?? undefined;\n\treturn data === undefined || data === '' ? defaultValue : JSON.parse(data);\n}\n","import { Button, ButtonContainer, Input, Modal } from '@oliverflecke/components-react';\nimport React, { FC, memo, useCallback, useContext, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { AccountContext } from '../services/AccountService';\n\nconst AddEntryModal: FC = memo(() => {\n\tconst { dispatch } = useContext(AccountContext);\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst dismiss = useCallback(() => setIsOpen(false), [setIsOpen]);\n\n\tconst { register, handleSubmit } = useForm<{ date: string }>();\n\tconst onSubmit = handleSubmit(({ date }) => {\n\t\tdispatch({ type: 'add entry', date });\n\t\tdismiss();\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<Button buttonType=\"Primary\" onClick={() => setIsOpen(true)}>\n\t\t\t\tAdd entry\n\t\t\t</Button>\n\t\t\t<Modal isOpen={isOpen} onDismiss={dismiss}>\n\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t\t<h2 className=\"text-lg text-gray-700 dark:text-gray-400\">Add new entry on date</h2>\n\t\t\t\t\t\t<Input type=\"date\" className=\"m-4\" {...register('date')} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t<Button buttonType=\"Primary\" type=\"submit\">\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonContainer>\n\t\t\t\t</form>\n\t\t\t</Modal>\n\t\t</>\n\t);\n});\nAddEntryModal.displayName = 'AddEntryModal';\n\nexport default AddEntryModal;\n","import { saveAs } from 'file-saver';\nimport React, { useCallback, useContext } from 'react';\nimport { AccountContext } from '../services/AccountService';\n\nconst FileOptionMenu: React.FC = () => {\n\tconst { dispatch, state } = useContext(AccountContext);\n\n\tconst closeFile = useCallback(() => dispatch({ type: 'reset' }), [dispatch]);\n\tconst save = useCallback(() => {\n\t\tconst blob = new Blob([JSON.stringify(state)], {\n\t\t\ttype: 'text/plain;charset=utf-8',\n\t\t});\n\t\tconst filename = `finance_${new Date().toISOString().slice(0, 19)}.json`;\n\t\tsaveAs(blob, filename);\n\t}, [state]);\n\n\tconst fileChange = useCallback(\n\t\tasync (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst files = e.target.files;\n\t\t\tif (!files || files.length === 0) return;\n\n\t\t\tconst file = files[0];\n\t\t\tconst text = await file.text();\n\t\t\ttry {\n\t\t\t\tconst state = JSON.parse(text);\n\t\t\t\tdispatch({ type: 'load state', state });\n\t\t\t} catch {\n\t\t\t\tconsole.warn(`Unable to parse file ${file.name}`);\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\treturn (\n\t\t<div className=\"flex justify-end space-x-4\">\n\t\t\t<button className=\"btn btn-primary max-h-12 max-w-12\" onClick={save}>\n\t\t\t\t{/* <SaveIcon /> */}\n\t\t\t\tSave\n\t\t\t</button>\n\t\t\t<input type=\"file\" onChange={fileChange} className=\"bg-blue-400 p-2 rounded\" />\n\t\t\t<button className=\"btn btn-secondary\" onClick={closeFile}>\n\t\t\t\tClose\n\t\t\t</button>\n\t\t</div>\n\t);\n};\nexport default FileOptionMenu;\n","import { AxisBottom, AxisLeft } from '@visx/axis';\nimport { curveLinear } from '@visx/curve';\nimport { Group } from '@visx/group';\nimport { LegendItem, LegendLabel, LegendOrdinal } from '@visx/legend';\nimport { ParentSize } from '@visx/responsive';\nimport { scaleLinear, scaleTime, scaleOrdinal, TimeDomain } from '@visx/scale';\nimport { LinePath } from '@visx/shape';\nimport { extent, max } from 'd3-array';\nimport { ScaleLinear, ScaleTime, tickFormat } from 'd3-scale';\nimport events from 'events';\nimport { Account, DateEntry } from 'models/Account';\nimport React, { FC, useContext } from 'react';\nimport { AccountContext } from 'services/AccountService';\nimport colors from 'tailwindcss/colors';\n\nconst IndividualGrowthGraph: FC = () => {\n\tconst { state } = useContext(AccountContext);\n\tconst data = Object.keys(state.entries).map((x) => ({\n\t\tdate: x,\n\t\tvalue: state.entries[x],\n\t}));\n\n\tconst lineColors = [\n\t\tcolors.amber,\n\t\tcolors.blueGray,\n\t\tcolors.green,\n\t\tcolors.pink,\n\t\tcolors.yellow,\n\t\tcolors.rose,\n\t\tcolors.purple,\n\t\tcolors.sky,\n\t\tcolors.indigo,\n\t];\n\n\treturn (\n\t\t<ParentSize>\n\t\t\t{(parent) => {\n\t\t\t\tconst margin = { top: 24, bottom: 24, left: 24, right: 24 };\n\t\t\t\tconst xAxisHeight = 20;\n\t\t\t\tconst width = parent.width;\n\t\t\t\tconst height = 300;\n\n\t\t\t\t// Then we'll create some bounds\n\t\t\t\tconst xMax = width - margin.left - margin.right;\n\t\t\t\tconst yMax = height - margin.top - margin.bottom - xAxisHeight;\n\n\t\t\t\tconst x = (d: any) => new Date(d.date);\n\n\t\t\t\tconst xScale = scaleTime({\n\t\t\t\t\trange: [0, xMax],\n\t\t\t\t\tdomain: extent(data, x) as TimeDomain,\n\t\t\t\t});\n\n\t\t\t\tconst yMaxValue = max(\n\t\t\t\t\tdata.map((x) => max(state.accounts.map((a) => x.value[a.name])) ?? 0) ?? 0\n\t\t\t\t);\n\t\t\t\tconst yScale = scaleLinear({\n\t\t\t\t\trange: [yMax, 0],\n\t\t\t\t\tdomain: [0, yMaxValue ?? 0],\n\t\t\t\t\tnice: true,\n\t\t\t\t});\n\n\t\t\t\tconst axisFormat = tickFormat(0, yMaxValue ?? 0, 10, '~s');\n\t\t\t\tconst labelColor = colors.cyan[500];\n\n\t\t\t\tconst legendScale = scaleOrdinal({\n\t\t\t\t\tdomain: state.accounts.map((x) => x.name),\n\t\t\t\t\trange: state.accounts.map((_, i) => lineColors[i][500]),\n\t\t\t\t});\n\t\t\t\tconst legendGlyphSize = 15;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<svg width={width} height={height}>\n\t\t\t\t\t\t\t<Group top={25} left={65}>\n\t\t\t\t\t\t\t\t<AxisLeft\n\t\t\t\t\t\t\t\t\tscale={yScale}\n\t\t\t\t\t\t\t\t\tnumTicks={10}\n\t\t\t\t\t\t\t\t\tstrokeWidth={1}\n\t\t\t\t\t\t\t\t\ttickFormat={axisFormat}\n\t\t\t\t\t\t\t\t\tstroke={labelColor}\n\t\t\t\t\t\t\t\t\ttickLabelProps={() => ({\n\t\t\t\t\t\t\t\t\t\tfill: labelColor,\n\t\t\t\t\t\t\t\t\t\ttextAnchor: 'end',\n\t\t\t\t\t\t\t\t\t\tverticalAnchor: 'middle',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<AxisBottom\n\t\t\t\t\t\t\t\t\ttop={yMax}\n\t\t\t\t\t\t\t\t\tleft={0}\n\t\t\t\t\t\t\t\t\tnumTicks={4}\n\t\t\t\t\t\t\t\t\tscale={xScale}\n\t\t\t\t\t\t\t\t\tstroke={'transparent'}\n\t\t\t\t\t\t\t\t\ttickLabelProps={() => ({\n\t\t\t\t\t\t\t\t\t\tfill: labelColor,\n\t\t\t\t\t\t\t\t\t\ttextAnchor: 'middle',\n\t\t\t\t\t\t\t\t\t\tverticalAnchor: 'middle',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{state.accounts.map((account, i) => (\n\t\t\t\t\t\t\t\t\t<AccountLine\n\t\t\t\t\t\t\t\t\t\tkey={account.name}\n\t\t\t\t\t\t\t\t\t\taccount={account}\n\t\t\t\t\t\t\t\t\t\tcolor={lineColors[i][500]}\n\t\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t<LegendOrdinal scale={legendScale} labelFormat={(label) => `${label.toUpperCase()}`}>\n\t\t\t\t\t\t\t{(labels) => (\n\t\t\t\t\t\t\t\t<div className=\"flex flex-row flex-wrap\">\n\t\t\t\t\t\t\t\t\t{labels.map((label, i) => (\n\t\t\t\t\t\t\t\t\t\t<LegendItem key={`legend-quantile-${i}`} margin=\"0 5px\">\n\t\t\t\t\t\t\t\t\t\t\t<svg width={legendGlyphSize} height={legendGlyphSize}>\n\t\t\t\t\t\t\t\t\t\t\t\t<rect fill={label.value} width={legendGlyphSize} height={legendGlyphSize} />\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<LegendLabel align=\"left\" margin=\"0 0 0 4px\">\n\t\t\t\t\t\t\t\t\t\t\t\t{label.text}\n\t\t\t\t\t\t\t\t\t\t\t</LegendLabel>\n\t\t\t\t\t\t\t\t\t\t</LegendItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</LegendOrdinal>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}}\n\t\t</ParentSize>\n\t);\n};\n\nexport default IndividualGrowthGraph;\n\ninterface AccountLineProps {\n\taccount: Account;\n\tcolor: string;\n\tdata: { date: string; value: DateEntry }[];\n\tyScale: ScaleLinear<number, number, never>;\n\txScale: ScaleTime<number, number, never>;\n}\n\nconst AccountLine = ({ account, color, data, yScale, xScale }: AccountLineProps) => {\n\tconst x = (d: any) => new Date(d.date);\n\tconst y = (d: any) => d.value[account.name];\n\n\tconst compose = (scale: any, accessor: any) => (data: any) => scale(accessor(data));\n\tconst xCompose = compose(xScale, x);\n\tconst yCompose = compose(yScale, y);\n\n\tconst xPoint = (d: any) => xCompose(d) ?? 0;\n\tconst yPoint = (d: any) => yCompose(d) ?? 0;\n\n\treturn (\n\t\t<LinePath\n\t\t\tdata={data}\n\t\t\tx={xPoint}\n\t\t\ty={yPoint}\n\t\t\tstrokeWidth={1.5}\n\t\t\tstroke={color}\n\t\t\tcurve={curveLinear}\n\t\t/>\n\t);\n};\n","import React, { FC } from 'react';\n\nconst DeleteIcon: FC = () => (\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 512 512\">\n\t\t<title>Trash</title>\n\t\t<path\n\t\t\td=\"M112 112l20 320c.95 18.49 14.4 32 32 32h184c17.67 0 30.87-13.51 32-32l20-320\"\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t\tstrokeWidth=\"32\"\n\t\t/>\n\t\t<path\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeMiterlimit=\"10\"\n\t\t\tstrokeWidth=\"32\"\n\t\t\td=\"M80 112h352\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M192 112V72h0a23.93 23.93 0 0124-24h80a23.93 23.93 0 0124 24h0v40M256 176v224M184 176l8 224M328 176l-8 224\"\n\t\t\tfill=\"none\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstrokeLinecap=\"round\"\n\t\t\tstrokeLinejoin=\"round\"\n\t\t\tstrokeWidth=\"32\"\n\t\t/>\n\t</svg>\n);\n\nexport default DeleteIcon;\n","import React, { FC, useCallback, useContext, useRef } from 'react';\nimport { Account, DateEntry } from '../models/Account';\nimport { AccountContext } from '../services/AccountService';\nimport { currencyFormatter, parseNumber } from '../utils/converters';\n\ninterface CellProps {\n\taccount: Account;\n\tentry: DateEntry;\n\tdate: string;\n}\n\nconst Cell: FC<CellProps> = ({ account, entry, date }: CellProps) => {\n\tconst { dispatch } = useContext(AccountContext);\n\tconst entryRef = useRef<HTMLTableDataCellElement>(null);\n\tconst onBlur = useCallback(\n\t\t(element: React.FormEvent<HTMLTableDataCellElement>) => {\n\t\t\tconst amount = parseNumber(element.currentTarget.innerText);\n\t\t\tif (amount !== NaN) {\n\t\t\t\tconsole.log(`Got amount ${amount}`);\n\t\t\t\tdispatch({ type: 'edit entry for account', name: account.name, key: date, value: amount });\n\t\t\t}\n\t\t},\n\t\t[account.name, date, dispatch]\n\t);\n\n\tconst value = currencyFormatter.format(entry[account.name] ?? 0);\n\n\treturn (\n\t\t<td\n\t\t\tkey={account.name}\n\t\t\tcontentEditable\n\t\t\tref={entryRef}\n\t\t\tonBlur={onBlur}\n\t\t\tclassName=\"px-2 text-right\"\n\t\t>\n\t\t\t{value}\n\t\t</td>\n\t);\n};\n\nexport default Cell;\n","import React, { FC, useContext } from 'react';\nimport DeleteIcon from 'icons/DeleteIcon';\nimport { Account, AccountEntries } from 'models/Account';\nimport { AccountContext } from 'services/AccountService';\nimport { currencyFormatter } from 'utils/converters';\nimport Cell from './Cell';\n\ninterface TableProps {\n\taccounts: Account[];\n\tentries: AccountEntries;\n}\n\nconst Table: FC<TableProps> = ({ accounts, entries }: TableProps) => {\n\tconst { dispatch } = useContext(AccountContext);\n\tconst totals = Object.keys(entries).map((date) => filterAndSum(accounts, entries, date));\n\n\treturn (\n\t\t<div className=\"h-full overflow-x-auto pb-4\">\n\t\t\t<table className=\"w-full\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className=\"text-right whitespace-nowrap\">\n\t\t\t\t\t\t<th className=\"text-center\">Date</th>\n\t\t\t\t\t\t<th className=\"text-green-700 dark:text-green-500\">Gain</th>\n\t\t\t\t\t\t<th className=\"text-blue-700 dark:text-blue-500\">Total</th>\n\t\t\t\t\t\t<th className=\"text-yellow-700 dark:text-yellow-500\">Total cash</th>\n\t\t\t\t\t\t<th className=\"text-purple-700 dark:text-purple-500\">Total investments</th>\n\t\t\t\t\t\t{accounts.map((account) => (\n\t\t\t\t\t\t\t<th key={account.name}>\n\t\t\t\t\t\t\t\t<span>{account.name}</span>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{Object.keys(entries).map((date, i) => {\n\t\t\t\t\t\tconst gain = i === 0 ? 0 : totals[i] - totals[i - 1];\n\t\t\t\t\t\tconst total = totals[i];\n\t\t\t\t\t\tconst totalCash = filterAndSum(accounts, entries, date, (x) => x.type === 'Cash');\n\t\t\t\t\t\tconst totalInvested = filterAndSum(\n\t\t\t\t\t\t\taccounts,\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t(x) => x.type === 'Investment'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\t\tkey={date}\n\t\t\t\t\t\t\t\tclassName=\"odd:bg-gray-300 dark:odd:bg-warmGray-800 text-right whitespace-nowrap font-mono\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<td className=\"text-center\">{date}</td>\n\t\t\t\t\t\t\t\t<td className=\"text-green-700 dark:text-green-500\">\n\t\t\t\t\t\t\t\t\t{currencyFormatter.format(gain)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"text-blue-700 dark:text-blue-500\">\n\t\t\t\t\t\t\t\t\t{currencyFormatter.format(total)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"text-yellow-700 dark:text-yellow-500\">\n\t\t\t\t\t\t\t\t\t{currencyFormatter.format(totalCash)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"text-purple-700 dark:text-purple-500\">\n\t\t\t\t\t\t\t\t\t{currencyFormatter.format(totalInvested)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t{accounts.map((account) => (\n\t\t\t\t\t\t\t\t\t<Cell key={account.name} account={account} entry={entries[date]} date={date} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonClick={() => dispatch({ type: 'delete entry', date: date })}\n\t\t\t\t\t\t\t\t\t\tclassName=\"flex h-6 w-6 text-red-700 dark:text-red-500 focus:outline-none\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nexport default Table;\n\nfunction filterAndSum(\n\taccounts: Account[],\n\tentries: AccountEntries,\n\tdate: string,\n\tfilter: (account: Account) => boolean = () => true\n): number {\n\treturn accounts\n\t\t.filter(filter)\n\t\t.map((x) => entries[date][x.name] ?? 0)\n\t\t.reduce((acc, x) => acc + x, 0);\n}\n","import React, { memo, useReducer } from 'react';\nimport AddAccount from './components/AddAccountModal';\nimport AddEntryModal from './components/AddEntryModal';\nimport FileOptionMenu from './components/FileOptionMenu';\nimport IndividualGrowthGraph from './components/IndividualGrowthGraph';\nimport Table from './components/Table';\nimport { AccountContext, accountReducer, initAccountState } from './services/AccountService';\n\nexport const AccountOverview = memo(() => {\n\tconst [state, dispatch] = useReducer(accountReducer, initAccountState());\n\n\treturn (\n\t\t<AccountContext.Provider value={{ state, dispatch }}>\n\t\t\t<Table accounts={state.accounts} entries={state.entries} />\n\t\t\t<div className=\"py-4 flex flex-row justify-between\">\n\t\t\t\t<AddAccount addAccount={(account) => dispatch({ type: 'add account', account })} />\n\t\t\t\t<AddEntryModal />\n\t\t\t</div>\n\t\t\t<FileOptionMenu />\n\t\t\t<IndividualGrowthGraph />\n\t\t</AccountContext.Provider>\n\t);\n});\nAccountOverview.displayName = 'AccountOverview';\n","export type InterestAccrual = 'Yearly' | 'Monthly';\n\nexport function FV(P: number, A: number, r: number, year: number, n = 12): number {\n\tconst rate = ratePerPaymentPeriod(r, 1, n);\n\tconst nper = n * year;\n\treturn P * Math.pow(1 + rate, nper) + A * ((Math.pow(1 + rate, nper) - 1) / rate);\n}\n\nexport function compoundInterest(\n\tprincipal: number,\n\tinterestRate: number,\n\ttime: number,\n\tinterestAccrual: InterestAccrual\n): number {\n\tconst n = getInterestAccrualPerYear(interestAccrual);\n\treturn principal * Math.pow(1 + interestRate / n, n * time);\n}\n\nexport function futureValue(\n\tregularDeposit: number,\n\tinterestRate: number,\n\ttime: number,\n\tinterestAccrual: InterestAccrual,\n\tnumberOfDeposits: number,\n\tdepositsMadeAt: 'beginning' | 'end' = 'end'\n): number {\n\tconst n = getInterestAccrualPerYear(interestAccrual);\n\n\treturn (\n\t\tregularDeposit *\n\t\tnumberOfDeposits *\n\t\t(((Math.pow(1 + interestRate / n, n * time) - 1) / (interestRate / n)) *\n\t\t\t(depositsMadeAt === 'end' ? 1 : 1 + interestRate / n))\n\t);\n}\n\nexport function ratePerPaymentPeriod(r: number, n: number, p: number): number {\n\treturn Math.pow(1 + r / n, n / p) - 1;\n}\n\nfunction getInterestAccrualPerYear(interestAccrual: InterestAccrual): number {\n\tswitch (interestAccrual) {\n\t\tcase 'Monthly':\n\t\t\treturn 12;\n\n\t\tcase 'Yearly':\n\t\tdefault:\n\t\t\treturn 1;\n\t}\n}\n","import { Button, Input } from '@oliverflecke/components-react';\nimport React, { FC, useMemo, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport NumberFormat from 'react-number-format';\nimport { FV, InterestAccrual } from '../../services/formulas';\nimport { parseNumber } from '../../utils/converters';\n\ninterface CompoundInterestProps {\n\tname?: string;\n}\n\ntype FormData = {\n\texistingAmount: number;\n\tinterestRate: number;\n\tinvestmentPeriod: number;\n\tinterestAccural: InterestAccrual;\n\tmonthlyDeposit: number;\n};\n\nconst CompoundInterest: FC<CompoundInterestProps> = ({}: CompoundInterestProps) => {\n\tconst [data, setData] = useState<FormData | null>(null);\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<FormData>({});\n\tconst onSubmit = handleSubmit((d) => setData(d));\n\n\treturn (\n\t\t<>\n\t\t\t<form onSubmit={onSubmit} className=\"w-full flex flex-col items-center justify-center\">\n\t\t\t\t<fieldset className=\"flex flex-col items-center space-y-6 sm:space-y-0 sm:grid sm:grid-cols-3 sm:gap-6\">\n\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\tcustomInput={Input}\n\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\tlabel=\"Existing amount\"\n\t\t\t\t\t\tplaceholder=\"20,000\"\n\t\t\t\t\t\tinputMode=\"numeric\"\n\t\t\t\t\t\terrorMessage={errors.existingAmount?.message}\n\t\t\t\t\t\t{...register('existingAmount', { required: true })}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel=\"Expected yearly growth\"\n\t\t\t\t\t\tplaceholder=\"7\"\n\t\t\t\t\t\terrorMessage={errors.interestRate && 'Please provide a valid value'}\n\t\t\t\t\t\t{...register('interestRate', {\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t})}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel=\"Investment period\"\n\t\t\t\t\t\tplaceholder=\"10\"\n\t\t\t\t\t\terrorMessage={\n\t\t\t\t\t\t\terrors.investmentPeriod && 'Please provide a number of years you are investing'\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{...register('investmentPeriod', { required: true })}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel=\"Interval of interest accrual\"\n\t\t\t\t\t\tplaceholder=\"Yearly\"\n\t\t\t\t\t\terrorMessage={errors.interestAccural?.message}\n\t\t\t\t\t\t{...register('interestAccural', { required: true })}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\tcustomInput={Input}\n\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\tlabel=\"Monthly deposit\"\n\t\t\t\t\t\tplaceholder=\"10,000\"\n\t\t\t\t\t\tinputMode=\"numeric\"\n\t\t\t\t\t\terrorMessage={errors.monthlyDeposit?.message}\n\t\t\t\t\t\t{...register('monthlyDeposit', { required: true })}\n\t\t\t\t\t/>\n\t\t\t\t</fieldset>\n\t\t\t\t<div className=\"w-full pt-4 flex justify-center\">\n\t\t\t\t\t<Button type=\"submit\">Calculate</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{data && (\n\t\t\t\t<CalculationSummary\n\t\t\t\t\texistingAmount={parseNumber(data.existingAmount)}\n\t\t\t\t\tinterestRate={parseNumber(data.interestRate)}\n\t\t\t\t\tinvestmentPeriod={parseNumber(data.investmentPeriod)}\n\t\t\t\t\tmonthlyDeposit={parseNumber(data.monthlyDeposit)}\n\t\t\t\t\tinterestAccural={data.interestAccural}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</>\n\t);\n};\n\nexport default CompoundInterest;\n\nconst formatter = Intl.NumberFormat('en-US', {\n\tstyle: 'currency',\n\tcurrency: 'DKK',\n});\n\nconst CalculationSummary = (props: FormData) => {\n\tconst r = useMemo(() => props.interestRate / 100, [props.interestRate]);\n\tconst isWithDeposits = useMemo(() => props.monthlyDeposit !== 0, [props.monthlyDeposit]);\n\n\tconst balance = FV(props.existingAmount, props.monthlyDeposit, r, props.investmentPeriod);\n\tconst totalDeposits = 12 * props.monthlyDeposit * props.investmentPeriod + props.existingAmount;\n\tconst totalInterest = balance - totalDeposits;\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"w-full flex flex-col items-center\">\n\t\t\t\t<div className=\"max-w-2xl w-full grid grid-cols-1 gap-y-4 gap-x-8 md:grid-cols-2 justify-center p-8\">\n\t\t\t\t\t<AmountSummary\n\t\t\t\t\t\tamount={balance}\n\t\t\t\t\t\tlabel={`Balance after ${props.investmentPeriod} years`}\n\t\t\t\t\t\tcolor=\"bg-blue-900 dark:bg-blue-300\"\n\t\t\t\t\t/>\n\t\t\t\t\t<AmountSummary\n\t\t\t\t\t\tamount={props.existingAmount}\n\t\t\t\t\t\tlabel={`Initial amount`}\n\t\t\t\t\t\tcolor=\"bg-green-900 dark:bg-green-300\"\n\t\t\t\t\t/>\n\t\t\t\t\t<AmountSummary\n\t\t\t\t\t\tamount={totalDeposits}\n\t\t\t\t\t\tlabel={`Total deposits`}\n\t\t\t\t\t\tcolor=\"bg-indigo-900 dark:bg-indigo-300\"\n\t\t\t\t\t/>\n\t\t\t\t\t<AmountSummary\n\t\t\t\t\t\tamount={totalInterest}\n\t\t\t\t\t\tlabel={'Gain from interest'}\n\t\t\t\t\t\tcolor=\"bg-yellow-900 dark:bg-yellow-300\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"overflow-x-scroll -mx-4 lg:overflow-x-auto lg:w-full lg:m-0\">\n\t\t\t\t<table className=\"w-full\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr className=\"text-right\">\n\t\t\t\t\t\t\t<th className=\"text-center\">Year</th>\n\t\t\t\t\t\t\t{isWithDeposits && <th>Deposit</th>}\n\t\t\t\t\t\t\t<th className=\"text-green-800 dark:text-green-400\">Interest</th>\n\t\t\t\t\t\t\t{isWithDeposits && <th>Total deposits</th>}\n\t\t\t\t\t\t\t<th className=\"text-purple-800 dark:text-purple-400\">Total interest</th>\n\t\t\t\t\t\t\t<th className=\"text-red-800 dark:text-red-400\">Balance</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody className=\"text-right font-mono\">\n\t\t\t\t\t\t{[...Array(props.investmentPeriod + 1).keys()].map((year) => {\n\t\t\t\t\t\t\tconst deposit = year === 0 ? props.existingAmount : 12 * props.monthlyDeposit;\n\t\t\t\t\t\t\tconst totalDeposit = year * 12 * props.monthlyDeposit + props.existingAmount;\n\t\t\t\t\t\t\tconst totalBalance = FV(props.existingAmount, props.monthlyDeposit, r, year);\n\t\t\t\t\t\t\tconst lastYear = year - 1;\n\n\t\t\t\t\t\t\tconst depositPrevious = lastYear * 12 * props.monthlyDeposit + props.existingAmount;\n\t\t\t\t\t\t\tconst balancePrevious = FV(props.existingAmount, props.monthlyDeposit, r, lastYear);\n\n\t\t\t\t\t\t\tconst totalInterest = totalBalance - totalDeposit;\n\t\t\t\t\t\t\tconst interest = year === 0 ? 0 : totalInterest - (balancePrevious - depositPrevious);\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr key={year} className=\"odd:bg-warmGray-200 dark:odd:bg-warmGray-900\">\n\t\t\t\t\t\t\t\t\t<td className=\"text-center\">{year}</td>\n\t\t\t\t\t\t\t\t\t{isWithDeposits && <td>{formatter.format(deposit)}</td>}\n\t\t\t\t\t\t\t\t\t<td>{formatter.format(interest)}</td>\n\t\t\t\t\t\t\t\t\t{isWithDeposits && <td>{formatter.format(totalDeposit)}</td>}\n\t\t\t\t\t\t\t\t\t<td>{formatter.format(totalInterest)}</td>\n\t\t\t\t\t\t\t\t\t<td>{formatter.format(totalBalance)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\ntype AmountSummaryProps = {\n\tamount: number;\n\tlabel: string;\n\tcolor?: string;\n};\nconst AmountSummary: FC<AmountSummaryProps> = ({ amount, label, color }: AmountSummaryProps) => (\n\t<div className=\"flex space-x-4\">\n\t\t<div className={`w-6 h-6 rounded-full ${color}`}></div>\n\t\t<div>\n\t\t\t<span className=\"text-black dark:text-warmGray-300\">{label}</span>\n\t\t\t<div className=\"text-black dark:text-white text-2xl\">{formatter.format(amount)}</div>\n\t\t</div>\n\t</div>\n);\n","import { DarkModeToggle, useDarkModeWithClass } from '@oliverflecke/components-react';\nimport React, { useEffect } from 'react';\nimport { AccountOverview } from './AccountOverview';\nimport './compiled.css';\nimport CompoundInterest from './components/CompoundInterest';\n\nconst client_id = 'ceb30c767fecf1ebac0b';\nconst client_secret = '0d5f7313fdad7a3971e540a38b23cc102bb555bf';\n\nconst githubAccessTokenUrl = 'https://github.com/login/oauth/access_token';\n\nconst App: React.FC = () => {\n\tconst { isDarkMode, setDarkMode } = useDarkModeWithClass();\n\n\tconst state = '1c327c5b-b1f9-470a-9830-cfbb0e37ddce';\n\n\tuseEffect(() => {\n\t\tconst params = new URLSearchParams(window.location.search);\n\t\tif (!params.has('code')) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst code = params.get('code');\n\t\tconsole.debug(`Code: ${code}`);\n\n\t\tfetch(githubAccessTokenUrl, {\n\t\t\tmethod: 'post',\n\t\t\tbody: JSON.stringify({\n\t\t\t\tclient_id,\n\t\t\t\tclient_secret,\n\t\t\t\tcode,\n\t\t\t}),\n\t\t})\n\t\t\t.then((x) => console.debug(x))\n\t\t\t.catch((err) => console.debug(err));\n\t}, []);\n\n\treturn (\n\t\t<main className=\"h-screen bg-white dark:bg-warmGray-900 text-gray-900 dark:text-gray-200\">\n\t\t\t<header className=\"p-2 flex flex-row justify-between text-gray-300 bg-emerald-900 \">\n\t\t\t\t<h1 className=\"p-4 text-xl uppercase font-sans font-light\">Finance tracker</h1>\n\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t<DarkModeToggle darkMode={isDarkMode} onToggle={() => setDarkMode(!isDarkMode)} />\n\t\t\t\t</div>\n\t\t\t\t<a\n\t\t\t\t\tclassName=\"btn btn-primary\"\n\t\t\t\t\thref={`https://github.com/login/oauth/authorize?client_id=${client_id}&state=${state}&redirect_uri=http://localhost:3000/finance-tools`}\n\t\t\t\t>\n\t\t\t\t\tLogin\n\t\t\t\t</a>\n\t\t\t\t{/* <button className=\"btn btn-primary\" onClick={login}>\n\t\t\t\t\tLogin\n\t\t\t\t</button> */}\n\t\t\t</header>\n\t\t\t<section className=\"p-4 dark:bg-warmGray-900\">\n\t\t\t\t<AccountOverview />\n\t\t\t</section>\n\n\t\t\t<section className=\"p-4 dark:bg-warmGray-700\">\n\t\t\t\t<h2 className=\"text-xl py-4 text-center lg:text-left\">Compound interest calculator</h2>\n\t\t\t\t<CompoundInterest />\n\t\t\t</section>\n\t\t</main>\n\t);\n};\n\nexport default App;\n\n// function getUser() {\n\n// }\n","import React from 'react';\nimport { render, hydrate } from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById('root');\nconst Application = (\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>\n);\n\nif (rootElement?.hasChildNodes()) {\n\thydrate(Application, rootElement);\n} else {\n\trender(Application, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}