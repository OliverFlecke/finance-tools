{"version":3,"sources":["features/AccountOverview/AddAccountModal.tsx","utils/date.ts","utils/converters.ts","utils/storage.ts","features/AccountOverview/AccountService.ts","features/AccountOverview/AddEntryModal.tsx","features/apiBase.ts","features/AccountOverview/api/accountApi.ts","features/AccountOverview/FileOptionMenu.tsx","features/AccountOverview/IndividualGrowthGraph.tsx","features/AccountOverview/Cell.tsx","features/AccountOverview/Table.tsx","features/AccountOverview/index.tsx","services/formulas.ts","features/CompoundInterest/index.tsx","features/login/LoginState.tsx","features/Navigation.tsx","features/Header.tsx","features/user/userApi.ts","features/Stocks/API/stockApi.ts","features/Stocks/API/yahoo.ts","features/Stocks/state.ts","features/Stocks/AddStock.tsx","features/Stocks/API/currenciesApi.ts","utils/math.ts","features/Stocks/models.ts","features/Stocks/RefreshStocksButton.tsx","utils/colors.ts","features/Stocks/StockLotRow.tsx","features/Stocks/StockLotsTable.tsx","features/Stocks/StockRow.tsx","features/Stocks/StockSettings.tsx","features/Stocks/StockSummaryRow.tsx","features/Stocks/index.tsx","App.tsx","index.tsx"],"names":["AddAccount","addAccount","useState","showPrompt","setShowPrompt","useForm","register","handleSubmit","errors","formState","close","useCallback","onClick","x","className","isOpen","onDismiss","onSubmit","account","placeholder","label","required","errorMessage","name","value","buttonType","type","formatDate","date","year","getFullYear","month","getMonth","day","getDate","length","join","parseNumber","Number","parseFloat","toString","replace","currencyFormatter","Intl","NumberFormat","undefined","style","currency","currencyDisplay","formatCurrency","isNaN","toLocaleString","convertToCurrency","fromCurrency","toCurrency","rates","getConversionRate","baseCurrency","toLowerCase","defaultRates","useConverter","dkk","nok","eur","getDataFromStorage","key","defaultValue","data","localStorage","getItem","parsed","JSON","parse","storedReducer","reducer","state","action","newState","setItem","stringify","AccountContext","createContext","accounts","entries","dispatch","_","accountReducer","concat","unordered","Object","keys","sort","reduce","obj","console","warn","AddEntryModal","memo","useContext","setIsOpen","dismiss","displayName","baseUri","apiVersion","post","uri","body","fetch","method","credentials","headers","a","response","json","content","map","entry","Date","then","res","updateEntry","FileOptionMenu","closeFile","save","blob","Blob","filename","toISOString","slice","saveAs","fileChange","e","files","target","file","text","onChange","IndividualGrowthGraph","lineColors","colors","amber","blueGray","green","pink","yellow","rose","purple","sky","indigo","ParentSize","parent","margin","width","xMax","yMax","xScale","scaleTime","range","domain","extent","d","yMaxValue","max","yScale","scaleLinear","nice","axisFormat","tickFormat","labelColor","cyan","legendScale","scaleOrdinal","i","height","Group","top","left","AxisLeft","scale","numTicks","strokeWidth","stroke","tickLabelProps","fill","textAnchor","verticalAnchor","AxisBottom","color","labelFormat","toUpperCase","labels","LegendItem","LegendLabel","align","AccountLine","compose","accessor","xCompose","yCompose","LinePath","y","curve","curveLinear","Cell","entryRef","useRef","onBlur","element","NaN","amount","currentTarget","innerText","accountId","id","format","contentEditable","ref","Table","totals","filterAndSum","gain","total","totalCash","totalInvested","size","filter","acc","AccountOverview","useReducer","useEffect","getAccountsWithEntries","add","Provider","FV","P","A","r","n","rate","ratePerPaymentPeriod","nper","Math","pow","p","CompoundInterest","setData","customInput","Input","thousandSeparator","inputMode","existingAmount","message","interestRate","investmentPeriod","interestAccural","monthlyDeposit","formatter","CalculationSummary","props","useMemo","isWithDeposits","balance","totalDeposits","totalInterest","Array","deposit","totalDeposit","totalBalance","lastYear","depositPrevious","balancePrevious","interest","AmountSummary","LoginState","user","authorizeUrl","logout","login","onMouseLeave","LoginButton","href","UserAvatar","src","avatar_url","alt","loading","Menu","links","path","Navigation","to","Header","useDarkModeWithClass","isDarkMode","setDarkMode","setUser","catch","err","log","window","location","darkMode","onToggle","trackStock","symbol","updateStockLot","lot","mode","deleteStockLot","apiUrl","getShares","symbols","error","Error","storageKey","StockContext","getDefaultStockState","stockReducer","stocks","preferredCurrency","currencyRates","usd","lots","buyDate","soldDate","debug","find","stock","old","lotId","uuidv4","shares","buyPrice","regularMarketPrice","buyBrokerage","AddStock","reset","addSymbol","quotes","alert","getUrl","sum","params","stockTotalShares","stockAvgPrice","totalShares","stockGain","avgPrice","RefreshStocksButton","reload","getValueColorIndicator","positiveColor","negativeColor","StockLotRow","defaultValues","watch","input","deleteLot","convert","marketValue","buyMarketValue","colSpan","toFixed","StockLotsTable","addLot","StockRow","currencyConverter","buyMarketPrice","gainPercentage","showLots","setShowLots","StockRowActions","deleteStock","StockSettings","toLocaleUpperCase","StockSummaryRow","totalValue","flatMap","totalGain","Stocks","getCurrencies","StocksTable","sortKey","setSortKey","ascending","setAscending","currentSortKey","stocksComparer","StockActionBar","children","Caret","b","result","localeCompare","App","rootElement","document","getElementById","Application","StrictMode","hasChildNodes","hydrate","render"],"mappings":"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","file":"static/js/main.7e0790ad.chunk.js","sourcesContent":["import { Button, ButtonContainer, Input, Modal } from '@oliverflecke/components-react';\nimport React, { FC, useCallback, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { IoAddCircleOutline } from 'react-icons/io5';\nimport { Account } from './models/Account';\n\ninterface AddAccountProps {\n\taddAccount: (account: Account) => void;\n}\n\nconst AddAccount: FC<AddAccountProps> = ({ addAccount }: AddAccountProps) => {\n\tconst [showPrompt, setShowPrompt] = useState(false);\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<Account>();\n\tconst close = useCallback(() => setShowPrompt(false), [setShowPrompt]);\n\tconst onSubmit = (account: Account) => {\n\t\taddAccount(account);\n\t\tclose();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<button onClick={() => setShowPrompt((x) => !x)} className=\"btn btn-primary space-x-2\">\n\t\t\t\t<IoAddCircleOutline className=\"inline\" />\n\t\t\t\t<span className=\"align-middle\">Add account</span>\n\t\t\t</button>\n\t\t\t<Modal isOpen={showPrompt} onDismiss={close}>\n\t\t\t\t<form onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t\t<h2 className=\"text-lg text-gray-700 dark:text-gray-400\">Add new account</h2>\n\n\t\t\t\t\t\t<fieldset className=\"space-y-2\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder=\"Savings, Investments...\"\n\t\t\t\t\t\t\t\tlabel=\"Name\"\n\t\t\t\t\t\t\t\t{...register('name', { required: true })}\n\t\t\t\t\t\t\t\terrorMessage={errors.name && 'Please provide a name for your account'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<label className=\"flex flex-col space-y-2\">\n\t\t\t\t\t\t\t\t<span className=\"text-gray-700 dark:text-gray-300 font-medium text-sm\">Type</span>\n\t\t\t\t\t\t\t\t<select\n\t\t\t\t\t\t\t\t\tclassName=\"py-2 px-4 rounded-md shadow focus:outline-none focus:ring focus:border-indigo-400 bg-white dark:bg-gray-900 dark:text-gray-100 undefined\"\n\t\t\t\t\t\t\t\t\t{...register('type', { required: true })}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<option value={'Cash'}>Cash</option>\n\t\t\t\t\t\t\t\t\t<option value={'Investment'}>Investment</option>\n\t\t\t\t\t\t\t\t</select>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</fieldset>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t<Button buttonType=\"Transparent\" onClick={close}>\n\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button type=\"submit\">Add</Button>\n\t\t\t\t\t</ButtonContainer>\n\t\t\t\t</form>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default AddAccount;\n","export function formatDate(date: Date): string {\n\tconst year = date.getFullYear();\n\tlet month = '' + (date.getMonth() + 1);\n\tlet day = '' + date.getDate();\n\n\tif (month.length < 2) month = '0' + month;\n\tif (day.length < 2) day = '0' + day;\n\n\treturn [year, month, day].join('-');\n}\n","import { useCallback } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any, @typescript-eslint/explicit-module-boundary-types\nexport function parseNumber(value: any): number {\n\treturn Number.parseFloat(value.toString().replace(/[,a-zA-Z]/g, ''));\n}\n\nexport const currencyFormatter = Intl.NumberFormat(undefined, {\n\tstyle: 'currency',\n\tcurrency: 'DKK',\n\tcurrencyDisplay: 'code',\n});\n\nexport function formatCurrency(value: number, currency?: string): string {\n\tif (Number.isNaN(value)) return '-';\n\n\treturn value.toLocaleString(undefined, {\n\t\tstyle: 'currency',\n\t\tcurrency: currency ?? 'USD',\n\t\tcurrencyDisplay: 'code',\n\t});\n}\n\nexport function convertToCurrency(\n\tvalue: number,\n\tfromCurrency?: string,\n\ttoCurrency?: string,\n\trates?: Rates\n): number {\n\treturn value * getConversionRate(fromCurrency, toCurrency, rates);\n}\n\nexport function getConversionRate(\n\tfromCurrency?: string,\n\ttoCurrency?: string,\n\trates?: Rates\n): number {\n\tconst baseCurrency = 'usd';\n\tfromCurrency = fromCurrency?.toLowerCase();\n\ttoCurrency = toCurrency?.toLowerCase();\n\trates = rates ?? defaultRates;\n\n\tif (!fromCurrency || !toCurrency || fromCurrency === toCurrency) {\n\t\treturn 1;\n\t}\n\n\tif (fromCurrency === baseCurrency) {\n\t\treturn toCurrency in rates ? rates[toCurrency] : 1;\n\t} else if (toCurrency === baseCurrency) {\n\t\treturn fromCurrency in rates ? 1 / rates[fromCurrency] : 1;\n\t} else {\n\t\treturn (\n\t\t\tgetConversionRate(fromCurrency, baseCurrency) * getConversionRate(baseCurrency, toCurrency)\n\t\t);\n\t}\n}\n\nexport function useConverter(\n\tfromCurrency: string,\n\ttoCurrency: string,\n\trates: Rates\n): (value: number) => number {\n\treturn useCallback((value: number) => convertToCurrency(value, fromCurrency, toCurrency, rates), [\n\t\tfromCurrency,\n\t\trates,\n\t\ttoCurrency,\n\t]);\n}\n\ntype Rates = { [key: string]: number };\n\nconst defaultRates: { [key: string]: number } = {\n\tdkk: 6.36,\n\tnok: 9,\n\teur: 0.85,\n};\n\nexport function sortObject<T>(unordered: T): T {\n\treturn (\n\t\tObject.keys(unordered)\n\t\t\t.sort()\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t.reduce((obj: { [key: string]: any }, key) => {\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\tobj[key] = (unordered as any)[key];\n\t\t\t\treturn obj;\n\t\t\t}, {}) as T\n\t);\n}\n","import { Reducer } from 'react';\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function getDataFromStorage(key: string, defaultValue: any = {}): any {\n\tconst data = localStorage.getItem(key) ?? undefined;\n\tconst parsed = data === undefined || data === '' ? {} : JSON.parse(data);\n\n\treturn {\n\t\t...defaultValue,\n\t\t...parsed,\n\t};\n}\n\nexport function storedReducer<S, A>(key: string, reducer: Reducer<S, A>): Reducer<S, A> {\n\treturn (state, action) => {\n\t\tconst newState = reducer(state, action);\n\n\t\tlocalStorage.setItem(key, JSON.stringify(newState));\n\n\t\treturn newState;\n\t};\n}\n","import { createContext } from 'react';\nimport { sortObject } from 'utils/converters';\nimport { getDataFromStorage, storedReducer } from 'utils/storage';\nimport { Account, AccountEntries } from './models/Account';\n\nexport const AccountContext = createContext({\n\tstate: {\n\t\taccounts: [] as Account[],\n\t\tentries: {} as AccountEntries,\n\t},\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n\tdispatch: (_: AccountAction) => {},\n});\n\nexport interface AccountState {\n\taccounts: Account[];\n\tentries: AccountEntries;\n}\n\nfunction getDefaultAccountState(): AccountState {\n\treturn {\n\t\taccounts: [],\n\t\tentries: {},\n\t};\n}\n\nexport function accountReducer(state: AccountState, action: AccountAction): AccountState {\n\treturn storedReducer('account_state', reducer)(state, action);\n}\n\nexport function initAccountState(): AccountState {\n\treturn getDataFromStorage('account_state', getDefaultAccountState());\n}\n\nexport type AccountAction =\n\t| { type: 'ADD ACCOUNT'; account: Account }\n\t| { type: 'ADD ENTRY'; date: string }\n\t| { type: 'DELETE ENTRY'; date: string }\n\t| { type: 'RESET' }\n\t| { type: 'LOAD STATE'; state: AccountState }\n\t| { type: 'EDIT ENTRY FOR ACCOUNT'; name: string; value: number; key: string };\n\nfunction reducer(state: AccountState, action: AccountAction): AccountState {\n\tswitch (action.type) {\n\t\tcase 'RESET':\n\t\t\treturn getDefaultAccountState();\n\t\tcase 'LOAD STATE':\n\t\t\treturn action.state;\n\t\tcase 'ADD ACCOUNT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taccounts: state.accounts.concat(action.account),\n\t\t\t};\n\t\tcase 'ADD ENTRY':\n\t\t\tstate.entries[action.date] = {};\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t};\n\t\tcase 'EDIT ENTRY FOR ACCOUNT':\n\t\t\tstate.entries[action.key][action.name] = action.value;\n\t\t\tstate.entries = sortObject(state.entries);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t};\n\t\tcase 'DELETE ENTRY':\n\t\t\tdelete state.entries[action.date];\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tentries: state.entries,\n\t\t\t};\n\n\t\tdefault:\n\t\t\tconsole.warn(`action type not handled: ${JSON.stringify(action)}`);\n\t\t\treturn state;\n\t}\n}\n","import { Button, ButtonContainer, Input, Modal } from '@oliverflecke/components-react';\nimport React, { FC, memo, useCallback, useContext, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { AccountContext } from './AccountService';\n\nconst AddEntryModal: FC = memo(() => {\n\tconst { dispatch } = useContext(AccountContext);\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst dismiss = useCallback(() => setIsOpen(false), [setIsOpen]);\n\n\tconst { register, handleSubmit } = useForm<{ date: string }>();\n\tconst onSubmit = handleSubmit(({ date }) => {\n\t\tdispatch({ type: 'ADD ENTRY', date });\n\t\tdismiss();\n\t});\n\n\treturn (\n\t\t<>\n\t\t\t<Button buttonType=\"Primary\" onClick={() => setIsOpen(true)}>\n\t\t\t\tAdd entry\n\t\t\t</Button>\n\t\t\t<Modal isOpen={isOpen} onDismiss={dismiss}>\n\t\t\t\t<form onSubmit={onSubmit}>\n\t\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t\t<h2 className=\"text-lg text-gray-700 dark:text-gray-400\">Add new entry on date</h2>\n\t\t\t\t\t\t<Input type=\"date\" className=\"m-4\" {...register('date')} />\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t<Button buttonType=\"Primary\" type=\"submit\">\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</ButtonContainer>\n\t\t\t\t</form>\n\t\t\t</Modal>\n\t\t</>\n\t);\n});\nAddEntryModal.displayName = 'AddEntryModal';\n\nexport default AddEntryModal;\n","const isDevelopement = process.env.NODE_ENV === 'development';\n\nexport const baseUri = isDevelopement\n\t? 'https://localhost:5001'\n\t: 'https://finance.oliverflecke.me';\n\nexport const apiVersion = 'api/v1';\n\nexport function post(uri: RequestInfo, body: unknown): Promise<Response> {\n\treturn fetch(uri, {\n\t\tmethod: 'post',\n\t\tcredentials: 'include',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(body),\n\t});\n}\n","import { apiVersion, baseUri, post } from '../../apiBase';\nimport { Account, AccountType } from '../models/Account';\n\nexport async function getAccountsWithEntries(): Promise<AccountResponse[]> {\n\tconst response = await fetch(`${baseUri}/${apiVersion}/account`, {\n\t\tmethod: 'get',\n\t\tcredentials: 'include',\n\t});\n\n\tconst content = await response.json();\n\n\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\treturn content.map((x: any) => ({\n\t\t...x,\n\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\tentries: x.entries.map((entry: any) => ({\n\t\t\t...entry,\n\t\t\tdate: new Date(Date.parse(entry.date)),\n\t\t})),\n\t}));\n}\n\nexport async function addAccount(account: Account): Promise<string> {\n\treturn await post(`${baseUri}/${apiVersion}/account`, account).then((res) => res.json());\n}\n\nexport async function updateEntry(entry: AddAccountEntryRequest): Promise<void> {\n\tawait post(`${baseUri}/${apiVersion}/account/entry`, entry);\n}\n\ninterface AccountResponse {\n\tid: string;\n\tname: string;\n\ttype: AccountType;\n\tentries: EntryResponse[];\n}\n\ninterface EntryResponse {\n\tdate: Date;\n\tamount: number;\n}\n\ninterface AddAccountEntryRequest {\n\taccountId: string;\n\tdate: string; // Must be a DateOnly formatted string\n\tamount: number;\n}\n","import { saveAs } from 'file-saver';\nimport React, { useCallback, useContext } from 'react';\nimport { IoSaveOutline } from 'react-icons/io5';\nimport { AccountContext } from './AccountService';\n\nconst FileOptionMenu: React.FC = () => {\n\tconst { dispatch, state } = useContext(AccountContext);\n\n\tconst closeFile = useCallback(() => dispatch({ type: 'RESET' }), [dispatch]);\n\tconst save = useCallback(() => {\n\t\tconst blob = new Blob([JSON.stringify(state)], {\n\t\t\ttype: 'text/plain;charset=utf-8',\n\t\t});\n\t\tconst filename = `finance_${new Date().toISOString().slice(0, 19)}.json`;\n\t\tsaveAs(blob, filename);\n\t}, [state]);\n\n\tconst fileChange = useCallback(\n\t\tasync (e: React.ChangeEvent<HTMLInputElement>) => {\n\t\t\tconst files = e.target.files;\n\t\t\tif (!files || files.length === 0) return;\n\n\t\t\tconst file = files[0];\n\t\t\tconst text = await file.text();\n\t\t\ttry {\n\t\t\t\tconst state = JSON.parse(text);\n\t\t\t\tdispatch({ type: 'LOAD STATE', state });\n\t\t\t} catch {\n\t\t\t\tconsole.warn(`Unable to parse file ${file.name}`);\n\t\t\t}\n\t\t},\n\t\t[dispatch]\n\t);\n\n\treturn (\n\t\t<div className=\"flex justify-end space-x-4\">\n\t\t\t<button className=\"btn btn-primary space-x-2\" onClick={save}>\n\t\t\t\t<IoSaveOutline className=\"inline\" />\n\t\t\t\t<span className=\"align-middle\">Save</span>\n\t\t\t</button>\n\t\t\t<input type=\"file\" onChange={fileChange} className=\"bg-blue-400 p-2 rounded\" />\n\t\t\t<button className=\"btn btn-secondary\" onClick={closeFile}>\n\t\t\t\tClose\n\t\t\t</button>\n\t\t</div>\n\t);\n};\nexport default FileOptionMenu;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\nimport { AxisBottom, AxisLeft } from '@visx/axis';\nimport { curveLinear } from '@visx/curve';\nimport { Group } from '@visx/group';\nimport { LegendItem, LegendLabel, LegendOrdinal } from '@visx/legend';\nimport { ParentSize } from '@visx/responsive';\nimport { scaleLinear, scaleOrdinal, scaleTime, TimeDomain } from '@visx/scale';\nimport { LinePath } from '@visx/shape';\nimport { extent, max } from 'd3-array';\nimport { ScaleLinear, ScaleTime, tickFormat } from 'd3-scale';\nimport { Account, DateEntry } from 'features/AccountOverview/models/Account';\nimport React, { FC, useContext } from 'react';\nimport colors from 'tailwindcss/colors';\nimport { AccountContext } from './AccountService';\n\nconst IndividualGrowthGraph: FC = () => {\n\tconst { state } = useContext(AccountContext);\n\tconst data = Object.keys(state.entries).map((x) => ({\n\t\tdate: x,\n\t\tvalue: state.entries[x],\n\t}));\n\n\tconst lineColors = [\n\t\tcolors.amber,\n\t\tcolors.blueGray,\n\t\tcolors.green,\n\t\tcolors.pink,\n\t\tcolors.yellow,\n\t\tcolors.rose,\n\t\tcolors.purple,\n\t\tcolors.sky,\n\t\tcolors.indigo,\n\t];\n\n\treturn (\n\t\t<ParentSize>\n\t\t\t{(parent) => {\n\t\t\t\tconst margin = { top: 24, bottom: 24, left: 24, right: 24 };\n\t\t\t\tconst xAxisHeight = 20;\n\t\t\t\tconst width = parent.width;\n\t\t\t\tconst height = 300;\n\n\t\t\t\t// Then we'll create some bounds\n\t\t\t\tconst xMax = width - margin.left - margin.right;\n\t\t\t\tconst yMax = height - margin.top - margin.bottom - xAxisHeight;\n\n\t\t\t\tconst x = (d: any) => new Date(d.date);\n\n\t\t\t\tconst xScale = scaleTime({\n\t\t\t\t\trange: [0, xMax],\n\t\t\t\t\tdomain: extent(data, x) as TimeDomain,\n\t\t\t\t});\n\n\t\t\t\tconst yMaxValue = max(\n\t\t\t\t\tdata.map((x) => max(state.accounts.map((a) => x.value[a.name])) ?? 0) ?? 0\n\t\t\t\t);\n\t\t\t\tconst yScale = scaleLinear({\n\t\t\t\t\trange: [yMax, 0],\n\t\t\t\t\tdomain: [0, yMaxValue ?? 0],\n\t\t\t\t\tnice: true,\n\t\t\t\t});\n\n\t\t\t\tconst axisFormat = tickFormat(0, yMaxValue ?? 0, 10, '~s');\n\t\t\t\tconst labelColor = colors.cyan[500];\n\n\t\t\t\tconst legendScale = scaleOrdinal({\n\t\t\t\t\tdomain: state.accounts.map((x) => x.name),\n\t\t\t\t\trange: state.accounts.map((_, i) => lineColors[i][500]),\n\t\t\t\t});\n\t\t\t\tconst legendGlyphSize = 15;\n\n\t\t\t\treturn (\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<svg width={width} height={height}>\n\t\t\t\t\t\t\t<Group top={25} left={65}>\n\t\t\t\t\t\t\t\t<AxisLeft\n\t\t\t\t\t\t\t\t\tscale={yScale}\n\t\t\t\t\t\t\t\t\tnumTicks={10}\n\t\t\t\t\t\t\t\t\tstrokeWidth={1}\n\t\t\t\t\t\t\t\t\ttickFormat={axisFormat}\n\t\t\t\t\t\t\t\t\tstroke={labelColor}\n\t\t\t\t\t\t\t\t\ttickLabelProps={() => ({\n\t\t\t\t\t\t\t\t\t\tfill: labelColor,\n\t\t\t\t\t\t\t\t\t\ttextAnchor: 'end',\n\t\t\t\t\t\t\t\t\t\tverticalAnchor: 'middle',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<AxisBottom\n\t\t\t\t\t\t\t\t\ttop={yMax}\n\t\t\t\t\t\t\t\t\tleft={0}\n\t\t\t\t\t\t\t\t\tnumTicks={4}\n\t\t\t\t\t\t\t\t\tscale={xScale}\n\t\t\t\t\t\t\t\t\tstroke={'transparent'}\n\t\t\t\t\t\t\t\t\ttickLabelProps={() => ({\n\t\t\t\t\t\t\t\t\t\tfill: labelColor,\n\t\t\t\t\t\t\t\t\t\ttextAnchor: 'middle',\n\t\t\t\t\t\t\t\t\t\tverticalAnchor: 'middle',\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t{state.accounts.map((account, i) => (\n\t\t\t\t\t\t\t\t\t<AccountLine\n\t\t\t\t\t\t\t\t\t\tkey={account.name}\n\t\t\t\t\t\t\t\t\t\taccount={account}\n\t\t\t\t\t\t\t\t\t\tcolor={lineColors[i][500]}\n\t\t\t\t\t\t\t\t\t\tdata={data}\n\t\t\t\t\t\t\t\t\t\txScale={xScale}\n\t\t\t\t\t\t\t\t\t\tyScale={yScale}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Group>\n\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t<LegendOrdinal scale={legendScale} labelFormat={(label) => `${label.toUpperCase()}`}>\n\t\t\t\t\t\t\t{(labels) => (\n\t\t\t\t\t\t\t\t<div className=\"flex flex-row flex-wrap\">\n\t\t\t\t\t\t\t\t\t{labels.map((label, i) => (\n\t\t\t\t\t\t\t\t\t\t<LegendItem key={`legend-quantile-${i}`} margin=\"0 5px\">\n\t\t\t\t\t\t\t\t\t\t\t<svg width={legendGlyphSize} height={legendGlyphSize}>\n\t\t\t\t\t\t\t\t\t\t\t\t<rect fill={label.value} width={legendGlyphSize} height={legendGlyphSize} />\n\t\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t\t\t<LegendLabel align=\"left\" margin=\"0 0 0 4px\">\n\t\t\t\t\t\t\t\t\t\t\t\t{label.text}\n\t\t\t\t\t\t\t\t\t\t\t</LegendLabel>\n\t\t\t\t\t\t\t\t\t\t</LegendItem>\n\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</LegendOrdinal>\n\t\t\t\t\t</div>\n\t\t\t\t);\n\t\t\t}}\n\t\t</ParentSize>\n\t);\n};\n\nexport default IndividualGrowthGraph;\n\ninterface AccountLineProps {\n\taccount: Account;\n\tcolor: string;\n\tdata: { date: string; value: DateEntry }[];\n\tyScale: ScaleLinear<number, number, never>;\n\txScale: ScaleTime<number, number, never>;\n}\n\nconst AccountLine = ({ account, color, data, yScale, xScale }: AccountLineProps) => {\n\tconst x = (d: any) => new Date(d.date);\n\tconst y = (d: any) => d.value[account.name];\n\n\tconst compose = (scale: any, accessor: any) => (data: any) => scale(accessor(data));\n\tconst xCompose = compose(xScale, x);\n\tconst yCompose = compose(yScale, y);\n\n\tconst xPoint = (d: any) => xCompose(d) ?? 0;\n\tconst yPoint = (d: any) => yCompose(d) ?? 0;\n\n\treturn (\n\t\t<LinePath\n\t\t\tdata={data}\n\t\t\tx={xPoint}\n\t\t\ty={yPoint}\n\t\t\tstrokeWidth={1.5}\n\t\t\tstroke={color}\n\t\t\tcurve={curveLinear}\n\t\t/>\n\t);\n};\n","import React, { FC, useCallback, useContext, useRef } from 'react';\nimport { Account, DateEntry } from './models/Account';\nimport { AccountContext } from './AccountService';\nimport { currencyFormatter, parseNumber } from 'utils/converters';\nimport { updateEntry } from './api/accountApi';\n\ninterface CellProps {\n\taccount: Account;\n\tentry: DateEntry;\n\tdate: string;\n}\n\nconst Cell: FC<CellProps> = ({ account, entry, date }: CellProps) => {\n\tconst { dispatch } = useContext(AccountContext);\n\tconst entryRef = useRef<HTMLTableDataCellElement>(null);\n\tconst onBlur = useCallback(\n\t\tasync (element: React.FormEvent<HTMLTableDataCellElement>) => {\n\t\t\tconst amount = parseNumber(element.currentTarget.innerText);\n\t\t\tif (amount !== NaN) {\n\t\t\t\tawait updateEntry({\n\t\t\t\t\tdate,\n\t\t\t\t\tamount,\n\t\t\t\t\taccountId: account.id,\n\t\t\t\t});\n\t\t\t\tdispatch({ type: 'EDIT ENTRY FOR ACCOUNT', name: account.name, key: date, value: amount });\n\t\t\t}\n\t\t},\n\t\t[account.id, account.name, date, dispatch]\n\t);\n\n\tconst value = currencyFormatter.format(entry[account.name] ?? 0);\n\n\treturn (\n\t\t<td\n\t\t\tkey={account.name}\n\t\t\tcontentEditable\n\t\t\tref={entryRef}\n\t\t\tonBlur={onBlur}\n\t\t\tclassName=\"px-2 text-right\"\n\t\t>\n\t\t\t{value}\n\t\t</td>\n\t);\n};\n\nexport default Cell;\n","import { Account, AccountEntries } from 'features/AccountOverview/models/Account';\nimport React, { FC, useContext } from 'react';\nimport { IoTrashOutline } from 'react-icons/io5';\nimport { AccountContext } from 'features/AccountOverview/AccountService';\nimport { currencyFormatter } from 'utils/converters';\nimport Cell from './Cell';\n\ninterface TableProps {\n\taccounts: Account[];\n\tentries: AccountEntries;\n}\n\nconst Table: FC<TableProps> = ({ accounts, entries }: TableProps) => {\n\tconst { dispatch } = useContext(AccountContext);\n\tconst totals = Object.keys(entries).map((date) => filterAndSum(accounts, entries, date));\n\n\treturn (\n\t\t<div className=\"h-full overflow-x-auto pb-4\">\n\t\t\t<table className=\"w-full\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className=\"text-right whitespace-nowrap\">\n\t\t\t\t\t\t<th className=\"text-center\">Date</th>\n\t\t\t\t\t\t<th className=\"text-green-700 dark:text-green-500\">Gain</th>\n\t\t\t\t\t\t<th className=\"text-blue-700 dark:text-blue-500\">Total</th>\n\t\t\t\t\t\t<th className=\"text-yellow-700 dark:text-yellow-500\">Total cash</th>\n\t\t\t\t\t\t<th className=\"text-purple-700 dark:text-purple-500\">Total investments</th>\n\t\t\t\t\t\t{accounts.map((account) => (\n\t\t\t\t\t\t\t<th key={account.name}>\n\t\t\t\t\t\t\t\t<span>{account.name}</span>\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<th></th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{Object.keys(entries).map((date, i) => {\n\t\t\t\t\t\tconst gain = i === 0 ? 0 : totals[i] - totals[i - 1];\n\t\t\t\t\t\tconst total = totals[i];\n\t\t\t\t\t\tconst totalCash = filterAndSum(accounts, entries, date, (x) => x.type === 'Cash');\n\t\t\t\t\t\tconst totalInvested = filterAndSum(\n\t\t\t\t\t\t\taccounts,\n\t\t\t\t\t\t\tentries,\n\t\t\t\t\t\t\tdate,\n\t\t\t\t\t\t\t(x) => x.type === 'Investment'\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr\n\t\t\t\t\t\t\t\tkey={date}\n\t\t\t\t\t\t\t\tclassName=\"odd:bg-gray-300 dark:odd:bg-coolGray-800 text-right whitespace-nowrap font-mono\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<td className=\"text-center\">{date}</td>\n\t\t\t\t\t\t\t\t<td className=\"text-green-700 dark:text-green-500\">\n\t\t\t\t\t\t\t\t\t{currencyFormatter.format(gain)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"text-blue-700 dark:text-blue-500\">\n\t\t\t\t\t\t\t\t\t{currencyFormatter.format(total)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"text-yellow-700 dark:text-yellow-500\">\n\t\t\t\t\t\t\t\t\t{currencyFormatter.format(totalCash)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t<td className=\"text-purple-700 dark:text-purple-500\">\n\t\t\t\t\t\t\t\t\t{currencyFormatter.format(totalInvested)}\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t{accounts.map((account) => (\n\t\t\t\t\t\t\t\t\t<Cell key={account.name} account={account} entry={entries[date]} date={date} />\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tonClick={() => dispatch({ type: 'DELETE ENTRY', date: date })}\n\t\t\t\t\t\t\t\t\t\tclassName=\"flex  focus:outline-none\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<IoTrashOutline size={24} className=\"text-red-700 dark:text-red-500\" />\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nexport default Table;\n\nfunction filterAndSum(\n\taccounts: Account[],\n\tentries: AccountEntries,\n\tdate: string,\n\tfilter: (account: Account) => boolean = () => true\n): number {\n\treturn accounts\n\t\t.filter(filter)\n\t\t.map((x) => entries[date][x.name] ?? 0)\n\t\t.reduce((acc, x) => acc + x, 0);\n}\n","import AddAccount from 'features/AccountOverview/AddAccountModal';\nimport React, { memo, useCallback, useEffect, useReducer } from 'react';\nimport { formatDate } from 'utils/date';\nimport { AccountContext, accountReducer, initAccountState } from './AccountService';\nimport AddEntryModal from './AddEntryModal';\nimport { addAccount, getAccountsWithEntries } from './api/accountApi';\nimport FileOptionMenu from './FileOptionMenu';\nimport IndividualGrowthGraph from './IndividualGrowthGraph';\nimport { Account, AccountEntries } from './models/Account';\nimport Table from './Table';\n\nconst AccountOverview = memo(() => {\n\tconst [state, dispatch] = useReducer(accountReducer, initAccountState());\n\n\tuseEffect(() => {\n\t\tgetAccountsWithEntries().then((accounts) => {\n\t\t\tconst entries: AccountEntries = {};\n\n\t\t\tfor (const account of accounts) {\n\t\t\t\tfor (const entry of account.entries) {\n\t\t\t\t\tconst key = formatDate(entry.date);\n\n\t\t\t\t\tif (!(key in entries)) {\n\t\t\t\t\t\tentries[key] = {};\n\t\t\t\t\t}\n\n\t\t\t\t\tentries[key][account.name] = entry.amount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdispatch({\n\t\t\t\ttype: 'LOAD STATE',\n\t\t\t\tstate: {\n\t\t\t\t\taccounts: accounts,\n\t\t\t\t\tentries,\n\t\t\t\t},\n\t\t\t});\n\t\t});\n\t}, []);\n\n\tconst add = useCallback(\n\t\tasync (account: Account) => {\n\t\t\tawait addAccount(account);\n\t\t\tdispatch({ type: 'ADD ACCOUNT', account });\n\t\t},\n\t\t[dispatch]\n\t);\n\n\treturn (\n\t\t<AccountContext.Provider value={{ state, dispatch }}>\n\t\t\t<Table accounts={state.accounts} entries={state.entries} />\n\t\t\t<div className=\"px-4 flex flex-row justify-between\">\n\t\t\t\t<AddAccount addAccount={add} />\n\t\t\t\t<AddEntryModal />\n\t\t\t</div>\n\t\t\t<div className=\"p-4\">\n\t\t\t\t<FileOptionMenu />\n\t\t\t</div>\n\t\t\t<IndividualGrowthGraph />\n\t\t</AccountContext.Provider>\n\t);\n});\nAccountOverview.displayName = 'AccountOverview';\n\nexport default AccountOverview;\n","export type InterestAccrual = 'Yearly' | 'Monthly';\n\nexport function FV(P: number, A: number, r: number, year: number, n = 12): number {\n\tconst rate = ratePerPaymentPeriod(r, 1, n);\n\tconst nper = n * year;\n\treturn P * Math.pow(1 + rate, nper) + A * ((Math.pow(1 + rate, nper) - 1) / rate);\n}\n\nexport function compoundInterest(\n\tprincipal: number,\n\tinterestRate: number,\n\ttime: number,\n\tinterestAccrual: InterestAccrual\n): number {\n\tconst n = getInterestAccrualPerYear(interestAccrual);\n\treturn principal * Math.pow(1 + interestRate / n, n * time);\n}\n\nexport function futureValue(\n\tregularDeposit: number,\n\tinterestRate: number,\n\ttime: number,\n\tinterestAccrual: InterestAccrual,\n\tnumberOfDeposits: number,\n\tdepositsMadeAt: 'beginning' | 'end' = 'end'\n): number {\n\tconst n = getInterestAccrualPerYear(interestAccrual);\n\n\treturn (\n\t\tregularDeposit *\n\t\tnumberOfDeposits *\n\t\t(((Math.pow(1 + interestRate / n, n * time) - 1) / (interestRate / n)) *\n\t\t\t(depositsMadeAt === 'end' ? 1 : 1 + interestRate / n))\n\t);\n}\n\nexport function ratePerPaymentPeriod(r: number, n: number, p: number): number {\n\treturn Math.pow(1 + r / n, n / p) - 1;\n}\n\nfunction getInterestAccrualPerYear(interestAccrual: InterestAccrual): number {\n\tswitch (interestAccrual) {\n\t\tcase 'Monthly':\n\t\t\treturn 12;\n\n\t\tcase 'Yearly':\n\t\tdefault:\n\t\t\treturn 1;\n\t}\n}\n","import { Button, Input } from '@oliverflecke/components-react';\nimport React, { FC, useMemo, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport NumberFormat from 'react-number-format';\nimport { FV, InterestAccrual } from '../../services/formulas';\nimport { parseNumber } from '../../utils/converters';\n\ninterface CompoundInterestProps {\n\tname?: string;\n}\n\ntype FormData = {\n\texistingAmount: number;\n\tinterestRate: number;\n\tinvestmentPeriod: number;\n\tinterestAccural: InterestAccrual;\n\tmonthlyDeposit: number;\n};\n\nconst CompoundInterest: FC<CompoundInterestProps> = ({}: CompoundInterestProps) => {\n\tconst [data, setData] = useState<FormData | null>(null);\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t} = useForm<FormData>({});\n\tconst onSubmit = handleSubmit((d) => setData(d));\n\n\treturn (\n\t\t<div className=\"px-4 dark:bg-coolGray-700\">\n\t\t\t<h2 className=\"text-xl py-4 lg:text-left\">Compound interest calculator</h2>\n\t\t\t<form\n\t\t\t\tonSubmit={onSubmit}\n\t\t\t\tclassName=\"w-full overflow-x-hidden flex flex-col items-center justify-center\"\n\t\t\t>\n\t\t\t\t<fieldset className=\"flex flex-col items-center space-y-6 sm:space-y-0 sm:grid sm:grid-cols-3 sm:gap-6\">\n\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\tcustomInput={Input}\n\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\tlabel=\"Existing amount\"\n\t\t\t\t\t\tplaceholder=\"20,000\"\n\t\t\t\t\t\tinputMode=\"numeric\"\n\t\t\t\t\t\terrorMessage={errors.existingAmount?.message}\n\t\t\t\t\t\t{...register('existingAmount', { required: true })}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel=\"Expected yearly growth\"\n\t\t\t\t\t\tplaceholder=\"7\"\n\t\t\t\t\t\terrorMessage={errors.interestRate && 'Please provide a valid value'}\n\t\t\t\t\t\t{...register('interestRate', {\n\t\t\t\t\t\t\trequired: true,\n\t\t\t\t\t\t})}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel=\"Investment period\"\n\t\t\t\t\t\tplaceholder=\"10\"\n\t\t\t\t\t\terrorMessage={\n\t\t\t\t\t\t\terrors.investmentPeriod && 'Please provide a number of years you are investing'\n\t\t\t\t\t\t}\n\t\t\t\t\t\t{...register('investmentPeriod', { required: true })}\n\t\t\t\t\t/>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tlabel=\"Interval of interest accrual\"\n\t\t\t\t\t\tplaceholder=\"Yearly\"\n\t\t\t\t\t\terrorMessage={errors.interestAccural?.message}\n\t\t\t\t\t\t{...register('interestAccural', { required: true })}\n\t\t\t\t\t/>\n\t\t\t\t\t<NumberFormat\n\t\t\t\t\t\tcustomInput={Input}\n\t\t\t\t\t\tthousandSeparator={true}\n\t\t\t\t\t\tlabel=\"Monthly deposit\"\n\t\t\t\t\t\tplaceholder=\"10,000\"\n\t\t\t\t\t\tinputMode=\"numeric\"\n\t\t\t\t\t\terrorMessage={errors.monthlyDeposit?.message}\n\t\t\t\t\t\t{...register('monthlyDeposit', { required: true })}\n\t\t\t\t\t/>\n\t\t\t\t</fieldset>\n\t\t\t\t<div className=\"w-full pt-4 flex justify-center\">\n\t\t\t\t\t<Button type=\"submit\">Calculate</Button>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t\t{data && (\n\t\t\t\t<CalculationSummary\n\t\t\t\t\texistingAmount={parseNumber(data.existingAmount)}\n\t\t\t\t\tinterestRate={parseNumber(data.interestRate)}\n\t\t\t\t\tinvestmentPeriod={parseNumber(data.investmentPeriod)}\n\t\t\t\t\tmonthlyDeposit={parseNumber(data.monthlyDeposit)}\n\t\t\t\t\tinterestAccural={data.interestAccural}\n\t\t\t\t/>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default CompoundInterest;\n\nconst formatter = Intl.NumberFormat('en-US', {\n\tstyle: 'currency',\n\tcurrency: 'DKK',\n});\n\nconst CalculationSummary = (props: FormData) => {\n\tconst r = useMemo(() => props.interestRate / 100, [props.interestRate]);\n\tconst isWithDeposits = useMemo(() => props.monthlyDeposit !== 0, [props.monthlyDeposit]);\n\n\tconst balance = FV(props.existingAmount, props.monthlyDeposit, r, props.investmentPeriod);\n\tconst totalDeposits = 12 * props.monthlyDeposit * props.investmentPeriod + props.existingAmount;\n\tconst totalInterest = balance - totalDeposits;\n\n\treturn (\n\t\t<>\n\t\t\t<div className=\"w-full flex flex-col items-center\">\n\t\t\t\t<div className=\"max-w-2xl w-full grid grid-cols-1 gap-y-4 gap-x-8 md:grid-cols-2 justify-center p-8\">\n\t\t\t\t\t<AmountSummary\n\t\t\t\t\t\tamount={balance}\n\t\t\t\t\t\tlabel={`Balance after ${props.investmentPeriod} years`}\n\t\t\t\t\t\tcolor=\"bg-blue-900 dark:bg-blue-300\"\n\t\t\t\t\t/>\n\t\t\t\t\t<AmountSummary\n\t\t\t\t\t\tamount={props.existingAmount}\n\t\t\t\t\t\tlabel={`Initial amount`}\n\t\t\t\t\t\tcolor=\"bg-green-900 dark:bg-green-300\"\n\t\t\t\t\t/>\n\t\t\t\t\t<AmountSummary\n\t\t\t\t\t\tamount={totalDeposits}\n\t\t\t\t\t\tlabel={`Total deposits`}\n\t\t\t\t\t\tcolor=\"bg-indigo-900 dark:bg-indigo-300\"\n\t\t\t\t\t/>\n\t\t\t\t\t<AmountSummary\n\t\t\t\t\t\tamount={totalInterest}\n\t\t\t\t\t\tlabel={'Gain from interest'}\n\t\t\t\t\t\tcolor=\"bg-yellow-900 dark:bg-yellow-300\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"overflow-x-scroll -mx-4 lg:overflow-x-auto lg:w-full lg:m-0\">\n\t\t\t\t<table className=\"w-full\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr className=\"text-right\">\n\t\t\t\t\t\t\t<th className=\"text-center\">Year</th>\n\t\t\t\t\t\t\t{isWithDeposits && <th>Deposit</th>}\n\t\t\t\t\t\t\t<th className=\"text-green-800 dark:text-green-400\">Interest</th>\n\t\t\t\t\t\t\t{isWithDeposits && <th>Total deposits</th>}\n\t\t\t\t\t\t\t<th className=\"text-purple-800 dark:text-purple-400\">Total interest</th>\n\t\t\t\t\t\t\t<th className=\"text-red-800 dark:text-red-400\">Balance</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody className=\"text-right font-mono\">\n\t\t\t\t\t\t{[...Array(props.investmentPeriod + 1).keys()].map((year) => {\n\t\t\t\t\t\t\tconst deposit = year === 0 ? props.existingAmount : 12 * props.monthlyDeposit;\n\t\t\t\t\t\t\tconst totalDeposit = year * 12 * props.monthlyDeposit + props.existingAmount;\n\t\t\t\t\t\t\tconst totalBalance = FV(props.existingAmount, props.monthlyDeposit, r, year);\n\t\t\t\t\t\t\tconst lastYear = year - 1;\n\n\t\t\t\t\t\t\tconst depositPrevious = lastYear * 12 * props.monthlyDeposit + props.existingAmount;\n\t\t\t\t\t\t\tconst balancePrevious = FV(props.existingAmount, props.monthlyDeposit, r, lastYear);\n\n\t\t\t\t\t\t\tconst totalInterest = totalBalance - totalDeposit;\n\t\t\t\t\t\t\tconst interest = year === 0 ? 0 : totalInterest - (balancePrevious - depositPrevious);\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<tr key={year} className=\"odd:bg-coolGray-200 dark:odd:bg-coolGray-900\">\n\t\t\t\t\t\t\t\t\t<td className=\"text-center\">{year}</td>\n\t\t\t\t\t\t\t\t\t{isWithDeposits && <td>{formatter.format(deposit)}</td>}\n\t\t\t\t\t\t\t\t\t<td>{formatter.format(interest)}</td>\n\t\t\t\t\t\t\t\t\t{isWithDeposits && <td>{formatter.format(totalDeposit)}</td>}\n\t\t\t\t\t\t\t\t\t<td>{formatter.format(totalInterest)}</td>\n\t\t\t\t\t\t\t\t\t<td>{formatter.format(totalBalance)}</td>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\ntype AmountSummaryProps = {\n\tamount: number;\n\tlabel: string;\n\tcolor?: string;\n};\nconst AmountSummary: FC<AmountSummaryProps> = ({ amount, label, color }: AmountSummaryProps) => (\n\t<div className=\"flex space-x-4\">\n\t\t<div className={`w-6 h-6 rounded-full ${color}`}></div>\n\t\t<div>\n\t\t\t<span className=\"text-black dark:text-coolGray-300\">{label}</span>\n\t\t\t<div className=\"text-black dark:text-white text-2xl\">{formatter.format(amount)}</div>\n\t\t</div>\n\t</div>\n);\n","import React from 'react';\nimport { useState } from 'react';\nimport { IoLogOutOutline } from 'react-icons/io5';\nimport { User } from 'utils/githubAuth';\n\ninterface LoginStateProps {\n\tuser: User | null;\n\tauthorizeUrl: string;\n\tlogout?: () => void;\n}\n\nconst LoginState: React.FC<LoginStateProps> = ({ user, authorizeUrl, logout }: LoginStateProps) => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\tif (user === null) {\n\t\treturn <LoginButton authorizeUrl={authorizeUrl} />;\n\t}\n\n\treturn (\n\t\t<div className=\"flex items-center space-x-4\">\n\t\t\t<span className=\"hidden sm:inline\">{user.login}</span>\n\t\t\t<div className=\"group\" onMouseLeave={() => setIsOpen(false)}>\n\t\t\t\t<button onClick={() => setIsOpen((x) => !x)}>\n\t\t\t\t\t<UserAvatar user={user} />\n\t\t\t\t</button>\n\t\t\t</div>\n\t\t\t<Menu isOpen={isOpen} logout={logout} />\n\t\t</div>\n\t);\n};\n\nexport default LoginState;\n\ninterface LoginButtonProps {\n\tauthorizeUrl: string;\n}\n\nconst LoginButton = ({ authorizeUrl }: LoginButtonProps) => (\n\t<a className=\"btn btn-primary\" href={authorizeUrl}>\n\t\tLogin\n\t</a>\n);\n\ninterface UserAvatarProps {\n\tuser: User;\n}\n\nconst UserAvatar = ({ user }: UserAvatarProps) => (\n\t<img\n\t\tsrc={user.avatar_url}\n\t\talt=\"Avatar of the logged in user\"\n\t\tclassName=\"max-h-10 rounded-full\"\n\t\tloading=\"lazy\"\n\t/>\n);\n\ninterface MenuProps {\n\tisOpen: boolean;\n\tlogout?: () => void;\n}\n\nconst Menu = ({ isOpen, logout }: MenuProps) => (\n\t<div\n\t\tclassName={`${\n\t\t\tisOpen ? '' : 'hidden'\n\t\t} group-hover:block absolute right-0 rounded py-4 shadow bg-coolGray-100 dark:bg-coolGray-700`}\n\t>\n\t\t<button\n\t\t\tonClick={logout}\n\t\t\tclassName=\"btn flex items-center space-x-2 hover:text-coolGray-900 dark:hover:text-coolGray-400 hover:underline\"\n\t\t>\n\t\t\t<IoLogOutOutline className=\"inline\" />\n\t\t\t<span className=\"align-middle\">Logout</span>\n\t\t</button>\n\t</div>\n);\n","import React, { useState } from 'react';\nimport { IoCloseOutline, IoMenuOutline } from 'react-icons/io5';\nimport { Link } from 'react-router-dom';\n\nconst links = [\n\t{ path: '/', text: 'Overview' },\n\t{\n\t\tpath: '/stocks',\n\t\ttext: 'Stocks',\n\t},\n\t{ path: '/compound-calculator', text: 'Compound calculator' },\n];\n\nconst Navigation: React.FC = () => {\n\tconst [isOpen, setIsOpen] = useState(false);\n\n\treturn (\n\t\t<nav className=\"flex flex-col md:flex-row\">\n\t\t\t<div className=\"flex items-center\">\n\t\t\t\t<button className=\"md:hidden\" onClick={() => setIsOpen((x) => !x)}>\n\t\t\t\t\t{isOpen ? <IoCloseOutline size={32} /> : <IoMenuOutline size={32} />}\n\t\t\t\t</button>\n\t\t\t\t<Link to=\"/\">\n\t\t\t\t\t<h1 className=\"px-4 md:px-0 text-xl uppercase font-sans font-light\">Finance tracker</h1>\n\t\t\t\t</Link>\n\t\t\t</div>\n\n\t\t\t<ul\n\t\t\t\tclassName={`${\n\t\t\t\t\tisOpen ? 'flex' : 'hidden'\n\t\t\t\t} flex-col md:flex md:flex-row md:items-center md:space-x-4 md:pl-8`}\n\t\t\t>\n\t\t\t\t{links.map((x) => (\n\t\t\t\t\t<li key={x.path}>\n\t\t\t\t\t\t<Link to={x.path} className=\"align-middle h-full font-light hover:underline\">\n\t\t\t\t\t\t\t{x.text}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</li>\n\t\t\t\t))}\n\t\t\t</ul>\n\t\t</nav>\n\t);\n};\n\nexport default Navigation;\n","import { DarkModeToggle, useDarkModeWithClass } from '@oliverflecke/components-react';\nimport React, { useEffect, useState } from 'react';\nimport { User } from 'utils/githubAuth';\nimport { baseUri } from './apiBase';\nimport LoginState from './login/LoginState';\nimport Navigation from './Navigation';\nimport { getMyUser } from './user/userApi';\n\nconst Header: React.FC = () => {\n\tconst { isDarkMode, setDarkMode } = useDarkModeWithClass();\n\tconst [user, setUser] = useState<User | null>(null);\n\n\tuseEffect(() => {\n\t\tgetMyUser().then((user) => {\n\t\t\tif (user) setUser(user);\n\t\t});\n\t}, []);\n\n\treturn (\n\t\t<header className=\"p-4 flex flex-row justify-between text-gray-300 bg-emerald-900 \">\n\t\t\t<Navigation />\n\t\t\t<div className=\"flex flex-row justify-center items-center\">\n\t\t\t\t<LoginState\n\t\t\t\t\tuser={user}\n\t\t\t\t\tauthorizeUrl={`${baseUri}/signin?returnUrl=${window.location.href}`}\n\t\t\t\t/>\n\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t<DarkModeToggle darkMode={isDarkMode} onToggle={() => setDarkMode(!isDarkMode)} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</header>\n\t);\n};\n\nexport default Header;\n","import { User } from 'utils/githubAuth';\nimport { apiVersion, baseUri } from 'features/apiBase';\n\nexport function getMyUser(): Promise<User> {\n\treturn fetch(`${baseUri}/${apiVersion}/user/me`, {\n\t\tcredentials: 'include',\n\t})\n\t\t.then((res) => res.json())\n\t\t.catch((err) => console.log(err));\n}\n","import { apiVersion, baseUri } from 'features/apiBase';\nimport { StockList } from '../models';\n\nconst uri = `${baseUri}/${apiVersion}`;\n\nexport function getStocksForUser(): Promise<StockList> {\n\treturn fetch(`${uri}/stock/tracked`, {\n\t\tcredentials: 'include',\n\t})\n\t\t.then(async (res) => await res.json())\n\t\t.then((stocks) =>\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\tstocks.map((stock: any) => ({\n\t\t\t\t...stock,\n\t\t\t\t// eslint-disable-next-line @typescript-eslint/no-explicit-any\n\t\t\t\tlots: stock.lots.map((lot: any) => ({\n\t\t\t\t\t...lot,\n\t\t\t\t\tbuyDate: new Date(Date.parse(lot.buyDate)),\n\t\t\t\t\tsoldDate: lot.soldDate ? new Date(Date.parse(lot.soldDate)) : undefined,\n\t\t\t\t})),\n\t\t\t}))\n\t\t);\n}\n\nexport async function trackStock(symbol: string): Promise<void> {\n\tawait fetch(`${uri}/stock/tracked`, {\n\t\tmethod: 'POST',\n\t\tcredentials: 'include',\n\t\tbody: symbol,\n\t})\n\t\t.then(() => console.log(`Stock tracked: ${symbol}`))\n\t\t.catch((err) => console.log(err));\n}\n\nexport function addStockLot(lot: AddStockLotRequest): Promise<string> {\n\treturn fetch(`${uri}/stock/lot`, {\n\t\tmethod: 'POST',\n\t\tcredentials: 'include',\n\t\tmode: 'cors',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(lot),\n\t}).then((res) => res.json());\n}\n\nexport async function updateStockLot(id: string, lot: UpdateStockLotRequest): Promise<void> {\n\tawait fetch(`${uri}/stock/lot/${id}`, {\n\t\tmethod: 'PUT',\n\t\tcredentials: 'include',\n\t\tmode: 'cors',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t\tbody: JSON.stringify(lot),\n\t});\n}\n\nexport async function deleteStockLot(id: string): Promise<void> {\n\tawait fetch(`${uri}/stock/lot/${id}`, {\n\t\tmethod: 'DELETE',\n\t\tcredentials: 'include',\n\t\tmode: 'cors',\n\t\theaders: {\n\t\t\t'Content-Type': 'application/json',\n\t\t},\n\t});\n}\n\ninterface AddStockLotRequest extends UpdateStockLotRequest {\n\tsymbol: string;\n}\n\ninterface UpdateStockLotRequest {\n\tshares: number;\n\tbuyDate: Date;\n\tbuyPrice: number;\n\tbuyBrokerage: number;\n\tsoldDate?: Date;\n\tsoldPrice?: number;\n\tsoldBrokerage?: number;\n}\n","import { apiVersion, baseUri } from 'features/apiBase';\n\nconst apiUrl = `${baseUri}/${apiVersion}/stock`;\n\nexport async function getShares(...symbols: string[]): Promise<QuoteResponse[]> {\n\tconst response = await fetch(`${apiUrl}?symbols=${symbols.join(',')}`, {\n\t\tmethod: 'GET',\n\t});\n\n\tconst json = await response.json();\n\tif (json.error) {\n\t\tthrow new Error(json.error);\n\t} else {\n\t\treturn json ?? [];\n\t}\n}\n\nexport interface QuoteResponse {\n\tlanguage: string;\n\tregion: string;\n\tquoteType: string;\n\tquoteSourceName: string;\n\ttriggerable: boolean;\n\tcurrency: string;\n\tmarketState: string;\n\tshortName: string;\n\tfirstTradeDateMilliseconds: number;\n\tfiftyTwoWeekLowChangePercent: number;\n\tpriceHint: number;\n\tpostMarketChangePercent: number;\n\tpostMarketTime: number;\n\tpostMarketPrice: number;\n\tpostMarketChange: number;\n\tregularMarketChange: number;\n\tregularMarketChangePercent: number;\n\tregularMarketTime: number;\n\tregularMarketPrice: number;\n\tregularMarketDayHigh: number;\n\tregularMarketDayRange: string;\n\tregularMarketDayLow: number;\n\tregularMarketVolume: number;\n\tregularMarketPreviousClose: number;\n\tbid: number;\n\task: number;\n\tbidSize: number;\n\taskSize: number;\n\tfullExchangeName: string;\n\tfinancialCurrency: string;\n\tregularMarketOpen: number;\n\taverageDailyVolume3Month: number;\n\taverageDailyVolume10Day: number;\n\tfiftyTwoWeekLowChange: number;\n\tepsTrailingTwelveMonths: number;\n\tepsForward: number;\n\tepsCurrentYear: number;\n\tpriceEpsCurrentYear: number;\n\tsharesOutstanding: number;\n\tbookValue: number;\n\tfiftyDayAverage: number;\n\tfiftyDayAverageChange: number;\n\tfiftyDayAverageChangePercent: number;\n\ttwoHundredDayAverage: number;\n\ttwoHundredDayAverageChange: number;\n\ttwoHundredDayAverageChangePercent: number;\n\tmarketCap: number;\n\tforwardPE: number;\n\tpriceToBook: number;\n\tsourceInterval: number;\n\texchangeDataDelayedBy: number;\n\texchange: string;\n\tlongName: string;\n\tmessageBoardId: string;\n\texchangeTimezoneName: string;\n\texchangeTimezoneShortName: string;\n\tgmtOffSetMilliseconds: number;\n\tmarket: string;\n\tesgPopulated: boolean;\n\tfiftyTwoWeekRange: string;\n\tfiftyTwoWeekHighChange: number;\n\tfiftyTwoWeekHighChangePercent: number;\n\tfiftyTwoWeekLow: number;\n\tfiftyTwoWeekHigh: number;\n\tdividendDate: number;\n\tearningsTimestamp: number;\n\tearningsTimestampStart: number;\n\tearningsTimestampEnd: number;\n\ttrailingAnnualDividendRate: number;\n\ttrailingPE: number;\n\ttrailingAnnualDividendYield: number;\n\taverageAnalystRating: string;\n\ttradeable: boolean;\n\tdisplayName: string;\n\tsymbol: string;\n}\n","import { createContext } from 'react';\nimport { getDataFromStorage, storedReducer } from '../../utils/storage';\nimport { Stock, StockList, StockLot } from './models';\nimport { v4 as uuidv4 } from 'uuid';\nimport { QuoteResponse } from './API/yahoo';\nimport { CurrencyRates } from './API/currenciesApi';\n\nconst storageKey = 'stocks_state';\n\nexport const StockContext = createContext({\n\tstate: getDefaultStockState(),\n\t// eslint-disable-next-line @typescript-eslint/no-unused-vars, @typescript-eslint/no-empty-function\n\tdispatch: (_: StockAction) => {},\n});\n\nexport function stockReducer(state: StockState, action: StockAction): StockState {\n\treturn storedReducer(storageKey, reducer)(state, action);\n}\n\nexport function getDefaultStockState(): StockState {\n\tconst state = getDataFromStorage(storageKey, {\n\t\tstocks: [],\n\t\tpreferredCurrency: 'usd',\n\t\tcurrencyRates: {\n\t\t\tusd: {},\n\t\t},\n\t});\n\n\tfor (const symbol of Object.keys(state.stocks)) {\n\t\tfor (const lot of state.stocks[symbol].lots) {\n\t\t\tlot.buyDate = new Date(Date.parse(lot.buyDate));\n\t\t\tlot.soldDate = lot.soldDate ? new Date(Date.parse(lot.soldDate)) : undefined;\n\t\t}\n\t}\n\n\treturn state;\n}\n\nexport interface StockState {\n\tstocks: StockList;\n\tcurrencyRates: CurrencyRates;\n\tpreferredCurrency: string;\n}\n\nexport type StockAction =\n\t| { type: 'ADD STOCK'; stock: Stock }\n\t| { type: 'DELETE STOCK'; symbol: string }\n\t| { type: 'UPDATE STOCKS'; stocks: QuoteResponse[] }\n\t| { type: 'SET STOCKS'; stocks: StockList }\n\t| { type: 'SET PREFERRED CURRENCY'; currency: string }\n\t| { type: 'SET CURRENCY RATES'; rates: CurrencyRates }\n\t| { type: 'ADD LOT'; symbol: string; lotId?: string }\n\t| { type: 'DELETE LOT'; symbol: string; id: string }\n\t| { type: 'EDIT LOT'; symbol: string; lot: StockLot };\n\nfunction reducer(state: StockState, action: StockAction): StockState {\n\tconsole.debug(`received action: ${action.type}`);\n\tswitch (action.type) {\n\t\tcase 'ADD STOCK':\n\t\t\tif (state.stocks.find((x) => x.symbol === action.stock.symbol)) {\n\t\t\t\treturn state;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstocks: state.stocks.concat(action.stock),\n\t\t\t};\n\n\t\tcase 'DELETE STOCK':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstocks: state.stocks.filter((x) => x.symbol !== action.symbol),\n\t\t\t};\n\t\tcase 'UPDATE STOCKS':\n\t\t\tconsole.log(action.stocks);\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstocks: state.stocks.map((old) => {\n\t\t\t\t\tconst stock = action.stocks.find((x) => x.symbol === old.symbol);\n\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...old,\n\t\t\t\t\t\t...stock,\n\t\t\t\t\t\tlots: old.lots,\n\t\t\t\t\t};\n\t\t\t\t}),\n\t\t\t};\n\n\t\tcase 'SET STOCKS':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstocks: action.stocks.map((stock) => ({\n\t\t\t\t\t...stock,\n\t\t\t\t\tlots: stock.lots ?? [],\n\t\t\t\t})),\n\t\t\t};\n\n\t\tcase 'ADD LOT': {\n\t\t\tconst lot: StockLot = {\n\t\t\t\tid: action.lotId ?? uuidv4(),\n\t\t\t\tshares: 0,\n\t\t\t\tbuyDate: new Date(),\n\t\t\t\tbuyPrice: state.stocks.find((x) => x.symbol === action.symbol)?.regularMarketPrice ?? 0,\n\t\t\t\tbuyBrokerage: 0,\n\t\t\t};\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstocks: state.stocks.map((stock) =>\n\t\t\t\t\tstock.symbol !== action.symbol\n\t\t\t\t\t\t? stock\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t...stock,\n\t\t\t\t\t\t\t\tlots: stock.lots.concat(lot),\n\t\t\t\t\t\t  }\n\t\t\t\t),\n\t\t\t};\n\t\t}\n\t\tcase 'DELETE LOT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstocks: state.stocks.map((stock) =>\n\t\t\t\t\tstock.symbol !== action.symbol\n\t\t\t\t\t\t? stock\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t...stock,\n\t\t\t\t\t\t\t\tlots: stock.lots.filter((x) => x.id !== action.id),\n\t\t\t\t\t\t  }\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase 'EDIT LOT':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstocks: state.stocks.map((stock) =>\n\t\t\t\t\tstock.symbol !== action.symbol\n\t\t\t\t\t\t? stock\n\t\t\t\t\t\t: {\n\t\t\t\t\t\t\t\t...stock,\n\t\t\t\t\t\t\t\tlots: stock.lots.filter((x) => x.id !== action.lot.id).concat(action.lot),\n\t\t\t\t\t\t  }\n\t\t\t\t),\n\t\t\t};\n\n\t\tcase 'SET PREFERRED CURRENCY':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tpreferredCurrency: action.currency.toLowerCase(),\n\t\t\t};\n\t\tcase 'SET CURRENCY RATES':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tcurrencyRates: action.rates,\n\t\t\t};\n\n\t\tdefault:\n\t\t\tconsole.warn('action not implemented');\n\t\t\treturn state;\n\t}\n}\n","import { Button, ButtonContainer, Input, Modal } from '@oliverflecke/components-react';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { IoAddCircleOutline } from 'react-icons/io5';\nimport { trackStock } from './API/stockApi';\nimport { getShares } from './API/yahoo';\nimport { Stock } from './models';\nimport { StockContext } from './state';\n\nconst AddStock: React.FC = () => {\n\tconst { dispatch } = useContext(StockContext);\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst {\n\t\tregister,\n\t\thandleSubmit,\n\t\tformState: { errors },\n\t\treset,\n\t} = useForm<Stock>();\n\n\tconst addSymbol = useCallback(\n\t\tasync (stock: Stock) => {\n\t\t\tconst quotes = await getShares(stock.symbol);\n\n\t\t\tif (quotes.length === 0) {\n\t\t\t\t// TODO: Better error dialog to inform user that stock quote was not found\n\t\t\t\talert(`Stock with symbol '${stock.symbol}' was not found`);\n\t\t\t} else {\n\t\t\t\tawait trackStock(stock.symbol);\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'ADD STOCK',\n\t\t\t\t\tstock: {\n\t\t\t\t\t\t...quotes[0],\n\t\t\t\t\t\tsymbol: stock.symbol,\n\t\t\t\t\t\tlots: [],\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\treset();\n\t\t\t}\n\t\t},\n\t\t[dispatch, reset]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<button className=\"btn btn-primary space-x-2\" onClick={() => setIsOpen(true)}>\n\t\t\t\t<IoAddCircleOutline className=\"inline\" />\n\t\t\t\t<span className=\"align-middle\">Add symbol</span>\n\t\t\t</button>\n\n\t\t\t<Modal isOpen={isOpen} onDismiss={() => setIsOpen(false)}>\n\t\t\t\t<div className=\"p-4 rounded bg-coolGray-300 dark:bg-coolGray-700\">\n\t\t\t\t\t<h3 className=\"text-lg font-bold pb-4\">Add symbol</h3>\n\n\t\t\t\t\t<form onSubmit={handleSubmit(addSymbol)} className=\"space-y-4\">\n\t\t\t\t\t\t<fieldset className=\"space-y-2\">\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tplaceholder=\"AAPL, MSFT...\"\n\t\t\t\t\t\t\t\tlabel=\"Symbol\"\n\t\t\t\t\t\t\t\t{...register('symbol', { required: true })}\n\t\t\t\t\t\t\t\terrorMessage={errors.symbol && 'Please provide a symbol to add'}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</fieldset>\n\n\t\t\t\t\t\t<ButtonContainer>\n\t\t\t\t\t\t\t<Button type=\"submit\" className=\"btn btn-primary ml-4 order-last\">\n\t\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t<Button buttonType=\"Transparent\" onClick={() => setIsOpen(false)}>\n\t\t\t\t\t\t\t\tCancel\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</ButtonContainer>\n\t\t\t\t\t</form>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default AddStock;\n","export function getCurrencies(currency = 'usd'): Promise<CurrencyRates> {\n\treturn fetch(getUrl(currency)).then(async (res) => await res.json());\n}\n\nexport interface CurrencyRates {\n\tdate: string;\n\tusd: { [key: string]: number };\n}\n\nfunction getUrl(currency: string) {\n\treturn `https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies/${currency}.min.json`;\n}\n","export function sum(...params: number[]): number {\n\treturn params.reduce((acc, x) => acc + x, 0);\n}\n","import { convertToCurrency } from 'utils/converters';\nimport { sum } from 'utils/math';\nimport { CurrencyRates } from './API/currenciesApi';\nimport { QuoteResponse } from './API/yahoo';\n\nexport type StockList = Stock[];\n\nexport interface Stock extends QuoteResponse {\n\tlots: StockLot[];\n}\n\nexport interface StockLot {\n\tid: string;\n\tshares: number;\n\tbuyDate: Date;\n\tbuyPrice: number;\n\tbuyBrokerage: number;\n\tsoldDate?: Date;\n\tsoldPrice?: number;\n\tsoldBrokerage?: number;\n}\n\nexport function stockTotalShares(stock: Stock): number {\n\treturn sum(...stock.lots.map((x) => x.shares));\n}\nexport function stockAvgPrice(stock: Stock): number {\n\tconst totalShares = stockTotalShares(stock);\n\treturn sum(...stock.lots.map((x) => x.shares * x.buyPrice)) / totalShares;\n}\n\nexport function stockGain(\n\tstock: Stock,\n\tpreferredCurrency?: string,\n\tcurrencyRates?: CurrencyRates\n): number {\n\tconst totalShares = stockTotalShares(stock);\n\tconst avgPrice = stockAvgPrice(stock);\n\n\treturn convertToCurrency(\n\t\ttotalShares * stock.regularMarketPrice - totalShares * avgPrice,\n\t\tstock.currency,\n\t\tpreferredCurrency,\n\t\tcurrencyRates?.usd\n\t);\n}\n","import { Button } from '@oliverflecke/components-react';\nimport React, { useCallback, useContext } from 'react';\nimport { IoReload } from 'react-icons/io5';\nimport { getShares } from './API/yahoo';\nimport { StockContext } from './state';\n\nconst RefreshStocksButton: React.FC = () => {\n\tconst { state, dispatch } = useContext(StockContext);\n\tconst reload = useCallback(async () => {\n\t\ttry {\n\t\t\tconst quotes = await getShares(...state.stocks.map((x) => x.symbol));\n\t\t\tdispatch({ type: 'UPDATE STOCKS', stocks: quotes });\n\t\t} catch (err) {\n\t\t\t// TODO: Display error to user\n\t\t\tconsole.error(err);\n\t\t}\n\t}, [state.stocks, dispatch]);\n\n\treturn (\n\t\t<Button onClick={reload} className=\"btn btn-primary space-x-2\">\n\t\t\t<IoReload aria-label=\"Reload current stock prices\" className=\"inline\" />\n\t\t\t<span className=\"align-middle\">Refresh stocks</span>\n\t\t</Button>\n\t);\n};\n\nexport default RefreshStocksButton;\n","export function getValueColorIndicator(value: number): string {\n\tif (value > 0) return colors.positiveColor;\n\telse if (value < 0) return colors.negativeColor;\n\telse return '';\n}\n\nconst colors = {\n\tpositiveColor: 'text-green-700 dark:text-green-400',\n\tnegativeColor: 'text-red-700 dark:text-red-400',\n};\n\nexport default colors;\n","import React, { useCallback, useContext } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { IoTrashOutline } from 'react-icons/io5';\nimport { getValueColorIndicator } from 'utils/colors';\nimport { formatCurrency, useConverter } from 'utils/converters';\nimport { formatDate } from 'utils/date';\nimport { deleteStockLot, updateStockLot } from './API/stockApi';\nimport { Stock, StockLot } from './models';\nimport { StockContext } from './state';\n\ninterface StockLotRowProps {\n\tstock: Stock;\n\tlot: StockLot;\n}\n\ninterface LotForm {\n\tid: string;\n\tshares: number;\n\tbuyPrice: number;\n\tbuyDate: string;\n}\n\nconst StockLotRow: React.FC<StockLotRowProps> = ({ stock, lot }: StockLotRowProps) => {\n\tconst {\n\t\tdispatch,\n\t\tstate: { preferredCurrency, currencyRates },\n\t} = useContext(StockContext);\n\tconst { register, handleSubmit, watch } = useForm<LotForm>({\n\t\tmode: 'onChange',\n\t\tdefaultValues: {\n\t\t\t...lot,\n\t\t\tbuyDate: formatDate(lot.buyDate),\n\t\t},\n\t});\n\n\tconst onChange = useCallback(\n\t\tasync (input: LotForm) => {\n\t\t\tif (input.buyDate === '') return;\n\n\t\t\tconst lot = {\n\t\t\t\tshares: Number(input.shares),\n\t\t\t\tbuyPrice: Number(input.buyPrice),\n\t\t\t\tbuyDate: new Date(Date.parse(input.buyDate.toString())),\n\t\t\t\tbuyBrokerage: 0,\n\t\t\t};\n\n\t\t\tawait updateStockLot(input.id, lot);\n\n\t\t\tdispatch({\n\t\t\t\ttype: 'EDIT LOT',\n\t\t\t\tsymbol: stock.symbol,\n\t\t\t\tlot: {\n\t\t\t\t\t...lot,\n\t\t\t\t\tid: input.id,\n\t\t\t\t},\n\t\t\t});\n\t\t},\n\t\t[dispatch, stock.symbol]\n\t);\n\tconst deleteLot = useCallback(async () => {\n\t\tawait deleteStockLot(lot.id);\n\t\tdispatch({ type: 'DELETE LOT', symbol: stock.symbol, id: lot.id });\n\t}, [dispatch, lot.id, stock.symbol]);\n\n\tconst convert = useConverter(stock.currency, preferredCurrency, currencyRates.usd);\n\n\tconst marketValue = watch('shares') * stock.regularMarketPrice;\n\tconst buyMarketValue = watch('buyPrice') * watch('shares');\n\tconst gain = marketValue - buyMarketValue;\n\n\treturn (\n\t\t<tr className=\"odd:bg-coolGray-200 dark:odd:bg-coolGray-600\">\n\t\t\t<td colSpan={3}>\n\t\t\t\t<form onChange={handleSubmit(onChange)} className=\"flex flex-row justify-evenly w-full\">\n\t\t\t\t\t<input type=\"date\" {...register('buyDate')} className=\"bg-transparent\" />\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t{...register('shares')}\n\t\t\t\t\t\tclassName=\"bg-transparent w-20 text-center\"\n\t\t\t\t\t/>\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t{...register('buyPrice')}\n\t\t\t\t\t\tclassName=\"bg-transparent w-20 text-center\"\n\t\t\t\t\t/>\n\t\t\t\t</form>\n\t\t\t</td>\n\t\t\t<td className=\"text-right\">{formatCurrency(convert(marketValue), preferredCurrency)}</td>\n\t\t\t<td className={`${getValueColorIndicator(gain)} text-right flex flex-col`}>\n\t\t\t\t<span>{formatCurrency(convert(gain), preferredCurrency)}</span>\n\t\t\t\t<span>{((marketValue / buyMarketValue - 1) * 100).toFixed(2)} %</span>\n\t\t\t</td>\n\t\t\t<td className=\"pl-4\">\n\t\t\t\t<button onClick={deleteLot}>\n\t\t\t\t\t<IoTrashOutline className=\"text-red-700 dark:text-red-500\" size={24} />\n\t\t\t\t</button>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\n\nexport default StockLotRow;\n","import { Button } from '@oliverflecke/components-react';\nimport React, { useCallback, useContext } from 'react';\nimport { IoAddCircleOutline } from 'react-icons/io5';\nimport { addStockLot } from './API/stockApi';\nimport { Stock, StockLot } from './models';\nimport { StockContext } from './state';\nimport StockLotRow from './StockLotRow';\n\ninterface StockLotsTableProps {\n\tstock: Stock;\n\tlots: StockLot[];\n}\n\nconst StockLotsTable: React.FC<StockLotsTableProps> = ({ lots, stock }: StockLotsTableProps) => {\n\tconst { dispatch } = useContext(StockContext);\n\n\tconst addLot = useCallback(async () => {\n\t\tconst lotId = await addStockLot({\n\t\t\tsymbol: stock.symbol,\n\t\t\tshares: 0,\n\t\t\tbuyDate: new Date(),\n\t\t\tbuyPrice: 0,\n\t\t\tbuyBrokerage: 0,\n\t\t});\n\t\tdispatch({ type: 'ADD LOT', symbol: stock.symbol, lotId: lotId });\n\t}, [dispatch, stock]);\n\n\treturn (\n\t\t<>\n\t\t\t<h3 className=\"text-center text-2xl text-green-700 dark:text-green-400\">\n\t\t\t\tLots for {stock.displayName ?? stock.symbol}\n\t\t\t</h3>\n\t\t\t<div className=\"bg-coolGray-300 dark:bg-coolGray-700 rounded shadow mx-8\">\n\t\t\t\t<table className=\"w-full\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Buy date</th>\n\t\t\t\t\t\t\t<th>Shares</th>\n\t\t\t\t\t\t\t<th>Buy price</th>\n\t\t\t\t\t\t\t<th>Market value</th>\n\t\t\t\t\t\t\t<th>Total gain</th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{lots.map((lot) => (\n\t\t\t\t\t\t\t<StockLotRow key={lot.id} lot={lot} stock={stock} />\n\t\t\t\t\t\t))}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\n\t\t\t\t<div className=\"p-4\">\n\t\t\t\t\t<Button onClick={addLot} className=\"space-x-2 btn btn-primary\">\n\t\t\t\t\t\t<IoAddCircleOutline className=\"inline\" />\n\t\t\t\t\t\t<span className=\"align-middle\">Add lot</span>\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</>\n\t);\n};\n\nexport default StockLotsTable;\n","import React, { useCallback, useContext, useState } from 'react';\nimport { IoEllipsisHorizontalCircleOutline, IoTrashOutline } from 'react-icons/io5';\nimport { getValueColorIndicator } from 'utils/colors';\nimport { formatCurrency, useConverter } from 'utils/converters';\nimport { Stock, stockAvgPrice, stockGain, stockTotalShares } from './models';\nimport { StockContext } from './state';\nimport StockLotsTable from './StockLotsTable';\n\ninterface StockRowProps {\n\tstock: Stock;\n}\n\nconst StockRow: React.FC<StockRowProps> = ({ stock }: StockRowProps) => {\n\tconst {\n\t\tstate: { preferredCurrency, currencyRates },\n\t} = useContext(StockContext);\n\tconst currencyConverter = useConverter(stock.currency, preferredCurrency, currencyRates.usd);\n\n\tconst totalShares = stockTotalShares(stock);\n\tconst avgPrice = stockAvgPrice(stock);\n\tconst buyMarketPrice = avgPrice * totalShares;\n\tconst marketValue = stock.regularMarketPrice * totalShares;\n\tconst gain = stockGain(stock, preferredCurrency, currencyRates);\n\tconst gainPercentage = (marketValue / buyMarketPrice - 1) * 100;\n\n\tconst [showLots, setShowLots] = useState(false);\n\n\treturn (\n\t\t<>\n\t\t\t<tr className=\"w-full relative text-right bg-coolGray-200 dark:bg-coolGray-800\">\n\t\t\t\t<td className=\"text-left px-4\">{stock.symbol}</td>\n\t\t\t\t<td>{formatCurrency(stock.regularMarketPrice, stock.currency)}</td>\n\t\t\t\t<td>{formatCurrency(currencyConverter(marketValue), preferredCurrency)}</td>\n\t\t\t\t<td>{totalShares}</td>\n\t\t\t\t<td className={getValueColorIndicator(avgPrice)}>\n\t\t\t\t\t{formatCurrency(avgPrice, stock.currency)}\n\t\t\t\t</td>\n\t\t\t\t<td className={`${getValueColorIndicator(gain)} flex flex-col`}>\n\t\t\t\t\t<span>{formatCurrency(gain, preferredCurrency)}</span>\n\t\t\t\t\t<span className={isNaN(gainPercentage) ? 'hidden' : ''}>\n\t\t\t\t\t\t{gainPercentage.toFixed(2)}%\n\t\t\t\t\t</span>\n\t\t\t\t</td>\n\n\t\t\t\t<StockRowActions stock={stock} setShowLots={setShowLots} />\n\t\t\t</tr>\n\t\t\t<tr>\n\t\t\t\t<td colSpan={7} className={`p-0 pb-4 ${showLots ? '' : 'hidden'}`}>\n\t\t\t\t\t<StockLotsTable lots={stock.lots} stock={stock} />\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t</>\n\t);\n};\n\nexport default StockRow;\n\ninterface StockRowActionProps {\n\tstock: Stock;\n\tsetShowLots: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nconst StockRowActions = ({ stock, setShowLots }: StockRowActionProps) => {\n\tconst { dispatch } = useContext(StockContext);\n\n\tconst deleteStock = useCallback(() => {\n\t\tdispatch({ type: 'DELETE STOCK', symbol: stock.symbol });\n\t}, [dispatch, stock.symbol]);\n\n\treturn (\n\t\t<td className=\"h-full space-x-2 pr-4\">\n\t\t\t<button onClick={() => setShowLots((x) => !x)} className=\"hover:cursor-pointer\">\n\t\t\t\t<IoEllipsisHorizontalCircleOutline size={24} />\n\t\t\t</button>\n\t\t\t<button onClick={deleteStock} className=\"hover:cursor-pointer\">\n\t\t\t\t<IoTrashOutline className=\"text-red-500\" size={24} />\n\t\t\t</button>\n\t\t</td>\n\t);\n};\n","import { ButtonContainer, Modal } from '@oliverflecke/components-react';\nimport React, { useCallback, useContext, useState } from 'react';\nimport { IoCloseCircleOutline, IoSettingsOutline } from 'react-icons/io5';\nimport { StockContext } from './state';\n\nconst StockSettings: React.FC = () => {\n\tconst {\n\t\tstate: { preferredCurrency, currencyRates },\n\t\tdispatch,\n\t} = useContext(StockContext);\n\tconst [isOpen, setIsOpen] = useState(false);\n\tconst onClick = useCallback(() => setIsOpen(true), [setIsOpen]);\n\tconst onChange = useCallback(\n\t\t(x: React.ChangeEvent<HTMLSelectElement>) => {\n\t\t\tconst currency = x.currentTarget.value;\n\t\t\tif (!currency) return;\n\n\t\t\tdispatch({ type: 'SET PREFERRED CURRENCY', currency });\n\t\t},\n\t\t[dispatch]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<button className=\"btn btn-secondary\" onClick={onClick}>\n\t\t\t\t<IoSettingsOutline />\n\t\t\t</button>\n\n\t\t\t<Modal isOpen={isOpen} onDismiss={() => setIsOpen(false)}>\n\t\t\t\t<div className=\"p-4 dark:bg-coolGray-900\">\n\t\t\t\t\t<h2 className=\"font-bold text-lg\">Stock settings</h2>\n\n\t\t\t\t\t<div className=\"grid grid-cols-2 gap-8\">\n\t\t\t\t\t\t<label>Preferred currency</label>\n\t\t\t\t\t\t<select\n\t\t\t\t\t\t\tonChange={onChange}\n\t\t\t\t\t\t\tdefaultValue={preferredCurrency}\n\t\t\t\t\t\t\tclassName=\"rounded dark:bg-coolGray-700\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{Object.keys(currencyRates.usd).map((key) => (\n\t\t\t\t\t\t\t\t<option key={key} value={key}>\n\t\t\t\t\t\t\t\t\t{key.toLocaleUpperCase()}\n\t\t\t\t\t\t\t\t</option>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</select>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<ButtonContainer className=\"mt-4\">\n\t\t\t\t\t\t<button onClick={() => setIsOpen(false)} className=\"btn btn-primary space-x-2\">\n\t\t\t\t\t\t\t<IoCloseCircleOutline size={24} className=\"inline\" />\n\t\t\t\t\t\t\t<span className=\"align-middle\">Close</span>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</ButtonContainer>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</>\n\t);\n};\n\nexport default StockSettings;\n","import React, { useContext, useMemo } from 'react';\nimport { convertToCurrency, formatCurrency } from 'utils/converters';\nimport { sum } from 'utils/math';\nimport { StockList } from './models';\nimport { StockContext } from './state';\n\ninterface StockSummaryRowProps {\n\tstocks: StockList;\n}\n\nconst StockSummaryRow: React.FC<StockSummaryRowProps> = ({ stocks }: StockSummaryRowProps) => {\n\tconst {\n\t\tstate: { preferredCurrency, currencyRates },\n\t} = useContext(StockContext);\n\tconst totalValue = useMemo(\n\t\t() =>\n\t\t\tsum(\n\t\t\t\t...stocks.flatMap((stock) =>\n\t\t\t\t\tstock.lots.map((lot) =>\n\t\t\t\t\t\tconvertToCurrency(\n\t\t\t\t\t\t\tstock.regularMarketPrice * lot.shares,\n\t\t\t\t\t\t\tstock.currency,\n\t\t\t\t\t\t\tpreferredCurrency,\n\t\t\t\t\t\t\tcurrencyRates.usd\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t[currencyRates.usd, preferredCurrency, stocks]\n\t);\n\tconst totalGain = useMemo(\n\t\t() =>\n\t\t\tsum(\n\t\t\t\t...stocks.flatMap((stock) =>\n\t\t\t\t\tstock.lots.map((lot) =>\n\t\t\t\t\t\tconvertToCurrency(\n\t\t\t\t\t\t\tstock.regularMarketPrice * lot.shares - lot.buyPrice * lot.shares,\n\t\t\t\t\t\t\tstock.currency,\n\t\t\t\t\t\t\tpreferredCurrency,\n\t\t\t\t\t\t\tcurrencyRates.usd\n\t\t\t\t\t\t)\n\t\t\t\t\t)\n\t\t\t\t)\n\t\t\t),\n\t\t[currencyRates.usd, preferredCurrency, stocks]\n\t);\n\n\treturn (\n\t\t<tr className=\"text-right font-bold dark:text-purple-400\">\n\t\t\t<td></td>\n\t\t\t<td></td>\n\t\t\t<td>{formatCurrency(totalValue, preferredCurrency)}</td>\n\t\t\t<td></td>\n\t\t\t<td></td>\n\t\t\t<td>{formatCurrency(totalGain, preferredCurrency)}</td>\n\t\t</tr>\n\t);\n};\n\nexport default StockSummaryRow;\n","import React, { ReactNode, useCallback, useEffect, useReducer, useState } from 'react';\nimport { IoCaretDown, IoCaretUp } from 'react-icons/io5';\nimport AddStock from './AddStock';\nimport { CurrencyRates, getCurrencies } from './API/currenciesApi';\nimport { getStocksForUser } from './API/stockApi';\nimport { getShares } from './API/yahoo';\nimport { Stock, stockAvgPrice, stockGain, StockList, stockTotalShares } from './models';\nimport RefreshStocksButton from './RefreshStocksButton';\nimport { getDefaultStockState, StockContext, stockReducer } from './state';\nimport StockRow from './StockRow';\nimport StockSettings from './StockSettings';\nimport StockSummaryRow from './StockSummaryRow';\n\nconst Stocks: React.FC = () => {\n\tconst [state, dispatch] = useReducer(stockReducer, getDefaultStockState());\n\n\tuseEffect(() => {\n\t\tgetCurrencies()\n\t\t\t.then((rates) => dispatch({ type: 'SET CURRENCY RATES', rates }))\n\t\t\t.catch((err) => console.warn(err));\n\t}, []);\n\n\tuseEffect(() => {\n\t\tgetStocksForUser()\n\t\t\t.then((stocks) =>\n\t\t\t\tdispatch({\n\t\t\t\t\ttype: 'SET STOCKS',\n\t\t\t\t\tstocks: stocks,\n\t\t\t\t})\n\t\t\t)\n\t\t\t// TODO: This code is replicated from the RefreshStockButton component.\n\t\t\t.then(async () => {\n\t\t\t\tconst quotes = await getShares(...state.stocks.map((x) => x.symbol));\n\t\t\t\tdispatch({ type: 'UPDATE STOCKS', stocks: quotes });\n\t\t\t});\n\t\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<StockContext.Provider value={{ state, dispatch }}>\n\t\t\t<h2 className=\"p-2 font-bold text-lg\">Stocks</h2>\n\t\t\t<StocksTable stocks={state.stocks} />\n\t\t\t<StockActionBar />\n\t\t</StockContext.Provider>\n\t);\n};\n\nexport default Stocks;\n\ninterface StocksTableProps {\n\tstocks: StockList;\n\tcurrencyRates?: CurrencyRates;\n\tpreferredCurrency?: string;\n}\n\ntype StockColumn =\n\t| 'Symbol'\n\t| 'Current price'\n\t| 'Total value'\n\t| 'Total shares'\n\t| 'Average price'\n\t| 'Gain';\n\nconst StocksTable: React.FC<StocksTableProps> = ({\n\tstocks,\n\tcurrencyRates,\n\tpreferredCurrency,\n}: StocksTableProps) => {\n\tconst [sortKey, setSortKey] = useState<StockColumn | undefined>();\n\tconst [ascending, setAscending] = useState(false);\n\tconst sort = useCallback(\n\t\t(key: StockColumn) => () => {\n\t\t\tif (sortKey === key) {\n\t\t\t\tsetAscending((x) => !x);\n\t\t\t} else {\n\t\t\t\tsetSortKey(key);\n\t\t\t}\n\t\t},\n\t\t[setSortKey, setAscending, sortKey]\n\t);\n\n\treturn (\n\t\t<div className=\"overflow-x-scroll\">\n\t\t\t<table className=\"w-full\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr className=\"text-sm align-bottom text-coolGray-600 dark:text-coolGray-400\">\n\t\t\t\t\t\t<Header sort={sort} currentSortKey={sortKey} sortKey={'Symbol'} ascending={ascending}>\n\t\t\t\t\t\t\tSymbol\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\tsort={sort}\n\t\t\t\t\t\t\tcurrentSortKey={sortKey}\n\t\t\t\t\t\t\tsortKey={'Current price'}\n\t\t\t\t\t\t\tascending={ascending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tCurrent price\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\tsort={sort}\n\t\t\t\t\t\t\tcurrentSortKey={sortKey}\n\t\t\t\t\t\t\tsortKey={'Total value'}\n\t\t\t\t\t\t\tascending={ascending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTotal value\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\tsort={sort}\n\t\t\t\t\t\t\tcurrentSortKey={sortKey}\n\t\t\t\t\t\t\tsortKey={'Total shares'}\n\t\t\t\t\t\t\tascending={ascending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tTotal shares\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Header\n\t\t\t\t\t\t\tsort={sort}\n\t\t\t\t\t\t\tcurrentSortKey={sortKey}\n\t\t\t\t\t\t\tsortKey={'Average price'}\n\t\t\t\t\t\t\tascending={ascending}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAverage price\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t\t<Header sort={sort} currentSortKey={sortKey} sortKey={'Gain'} ascending={ascending}>\n\t\t\t\t\t\t\tGain\n\t\t\t\t\t\t</Header>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{stocks\n\t\t\t\t\t\t.sort(stocksComparer(sortKey, ascending, preferredCurrency, currencyRates))\n\t\t\t\t\t\t.map((stock) => (\n\t\t\t\t\t\t\t<StockRow key={stock.symbol} stock={stock} />\n\t\t\t\t\t\t))}\n\t\t\t\t</tbody>\n\t\t\t\t<tfoot>\n\t\t\t\t\t<StockSummaryRow stocks={stocks} />\n\t\t\t\t</tfoot>\n\t\t\t</table>\n\t\t</div>\n\t);\n};\n\nconst StockActionBar = () => {\n\treturn (\n\t\t<div className=\"p-4 justify-between flex\">\n\t\t\t<AddStock />\n\t\t\t<RefreshStocksButton />\n\t\t\t<StockSettings />\n\t\t</div>\n\t);\n};\n\ninterface HeaderProps {\n\tsort: (key: StockColumn) => () => void;\n\tchildren: ReactNode;\n\tcurrentSortKey?: StockColumn;\n\tsortKey: StockColumn;\n\tascending: boolean;\n}\nconst Header = ({ sort, children, currentSortKey, sortKey, ascending }: HeaderProps) => (\n\t<th>\n\t\t<button\n\t\t\tonClick={sort(sortKey)}\n\t\t\tclassName=\"px-2 focus:ring-1 ring-red-800 dark:ring-red-600 rounded-sm\"\n\t\t>\n\t\t\t{children}\n\t\t\t{sortKey === currentSortKey && <Caret ascending={ascending} />}\n\t\t</button>\n\t</th>\n);\n\nconst Caret = ({ ascending }: { ascending: boolean }) => (\n\t<>{ascending ? <IoCaretDown className=\"inline\" /> : <IoCaretUp className=\"inline\" />}</>\n);\n\nfunction stocksComparer(\n\tkey?: StockColumn,\n\tascending?: boolean,\n\tpreferredCurrency?: string,\n\tcurrencyRates?: CurrencyRates\n): (a: Stock, b: Stock) => number {\n\tif (!key) return () => 0;\n\n\treturn (a, b) => {\n\t\tlet result = 0;\n\t\tswitch (key) {\n\t\t\tcase 'Symbol':\n\t\t\t\tresult = a.symbol.localeCompare(b.symbol);\n\t\t\t\tbreak;\n\t\t\tcase 'Gain':\n\t\t\t\tresult =\n\t\t\t\t\tstockGain(a, preferredCurrency, currencyRates) -\n\t\t\t\t\tstockGain(b, preferredCurrency, currencyRates);\n\t\t\t\tbreak;\n\t\t\tcase 'Average price':\n\t\t\t\t// TODO: This should properly be converted to the same currency\n\t\t\t\tresult = stockAvgPrice(a) - stockAvgPrice(b);\n\t\t\t\tbreak;\n\t\t\tcase 'Current price':\n\t\t\t\tresult = a.regularMarketPrice - b.regularMarketPrice;\n\t\t\t\tbreak;\n\t\t\tcase 'Total shares':\n\t\t\t\tresult = stockTotalShares(a) - stockTotalShares(b);\n\t\t\t\tbreak;\n\t\t\tcase 'Total value':\n\t\t\t\tresult =\n\t\t\t\t\ta.regularMarketPrice * stockTotalShares(a) - b.regularMarketPrice * stockTotalShares(b);\n\t\t\t\tbreak;\n\t\t}\n\n\t\treturn result * (ascending ? 1 : -1);\n\t};\n}\n","import 'compiled.css';\nimport AccountOverview from 'features/AccountOverview';\nimport CompoundInterest from 'features/CompoundInterest';\nimport Header from 'features/Header';\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Stocks from './features/Stocks';\n\nconst App: React.FC = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<main className=\"min-h-screen h-full bg-white dark:bg-coolGray-900 text-gray-900 dark:text-gray-200\">\n\t\t\t\t<Header />\n\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route path=\"/stocks\">\n\t\t\t\t\t\t<Stocks />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/compound-calculator\">\n\t\t\t\t\t\t<CompoundInterest />\n\t\t\t\t\t</Route>\n\t\t\t\t\t<Route path=\"/\">\n\t\t\t\t\t\t<AccountOverview />\n\t\t\t\t\t</Route>\n\t\t\t\t</Switch>\n\t\t\t</main>\n\t\t</Router>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport { render, hydrate } from 'react-dom';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById('root');\nconst Application = (\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>\n);\n\nif (rootElement?.hasChildNodes()) {\n\thydrate(Application, rootElement);\n} else {\n\trender(Application, rootElement);\n}\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}